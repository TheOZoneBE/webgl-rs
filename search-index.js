var N = null;var searchIndex = {};
searchIndex["webgl_rs"]={"doc":"","items":[[0,"buffer","webgl_rs","WebGLBuffer and methods",N,N],[3,"WebGLRSBuffer","webgl_rs::buffer","Buffer which is used for storing data",N,N],[11,"delete","","Deletes this `WebGLRSBuffer`",0,[[["self"]]]],[11,"is_valid","","Returns true is the `WebGLRSBuffer` object is valid.",0,[[["self"]],["bool"]]],[11,"bind","","Binds the buffer to a given target",0,[[["self"],["bufferkind"]]]],[11,"bind_base","","Binds the `WebGLRSBuffer` to a given binding point (target) at a given index.",0,[[["self"],["bufferbase"],["u32"]]]],[11,"bind_range","","Binds a range of the `WebGLRSBuffer` to a given binding point (target) at a given index.",0,[[["self"],["bufferbase"],["u32"],["u32"],["u32"]]]],[0,"data_view","webgl_rs","",N,N],[8,"Buffer","webgl_rs::data_view","",N,N],[10,"buffer_data","","",1,[[["self"],["webgl2renderingcontext"],["bufferkind"],["datahint"]]]],[10,"buffer_sub_data","","",1,[[["self"],["webgl2renderingcontext"],["bufferkind"],["i64"]]]],[10,"get_buffer_sub_data","","",1,[[["self"],["webgl2renderingcontext"],["bufferkind"],["i64"],["u32"],["u32"]],["result",["jsvalue"]]]],[8,"Image","","",N,N],[10,"tex_image_2d","","",2,[[["self"],["webgl2renderingcontext"],["texturebindpoint"],["u32"],["pixelcopyformat"],["u32"],["u32"],["pixelcopyformat"],["pixeltype"]],["result",["jsvalue"]]]],[10,"tex_sub_image_2d","","",2,[[["self"],["webgl2renderingcontext"],["texturebindpoint"],["u32"],["u32"],["u32"],["u32"],["u32"],["pixelcopyformat"],["pixeltype"]],["result",["jsvalue"]]]],[10,"read_pixels","","",2,[[["self"],["webgl2renderingcontext"],["u32"],["u32"],["u32"],["u32"],["pixelreadformat"],["pixeltype"]],["result",["jsvalue"]]]],[0,"framebuffer","webgl_rs","WebGLFramebuffer and methods",N,N],[3,"WebGLRSFramebuffer","webgl_rs::framebuffer","Collection of buffers to be used as a rendering destination",N,N],[11,"bind","","Binds this buffer to a given target",3,[[["self"],["framebufferkind"]]]],[11,"is_valid","","Returns `true` if this is a valid `WebGLRSFramebuffer` object",3,[[["self"]],["bool"]]],[11,"delete","","Deletes this `WebGLRSFramebuffer` object",3,[[["self"]]]],[0,"glenum","webgl_rs","",N,N],[4,"AttributeSize","webgl_rs::glenum","Constants passed to WebGLRenderingContext.vertexAttribPointer()",N,N],[13,"One","","",4,N],[13,"Two","","",4,N],[13,"Three","","",4,N],[13,"Four","","",4,N],[4,"ShaderKind","","Constants passed to WebGLRenderingContext.createShader()",N,N],[13,"Fragment","","Passed to createShader to define a fragment shader.",5,N],[13,"Vertex","","Passed to createShader to define a vertex shader",5,N],[4,"NotProgramParameter","","FIXME categorize values elsewhere",N,N],[13,"MaxVertexAttribs","","The maximum number of entries possible in the vertex attribute list.",6,N],[13,"MaxVertexUniformVectors","","",6,N],[13,"MaxVaryingVectors","","",6,N],[13,"MaxCombinedTextureImageUnits","","",6,N],[13,"MaxVertexTextureImageUnits","","",6,N],[13,"MaxTextureImageUnits","","Implementation dependent number of maximum texture units. At least 8.",6,N],[13,"MaxFragmentUniformVectors","","",6,N],[13,"ShadingLanguageVersion","","",6,N],[13,"CurrentProgram","","",6,N],[4,"ProgramParameter","","Constants passed to WebGLRenderingContext.getProgramParameter() TODO decide if im keeping it public or move to shader_program as it is only used internally i think",N,N],[13,"DeleteStatus","","Passed to getProgramParameter to determine if a shader was deleted via deleteProgram. Returns true if it was, false otherwise.",7,N],[13,"LinkStatus","","Passed to getProgramParameter after calling linkProgram to determine if a program was linked correctly. Returns false if there were errors. Use getProgramInfoLog to find the exact error.",7,N],[13,"ValidateStatus","","Passed to getProgramParameter after calling validateProgram to determine if it is valid. Returns false if errors were found.",7,N],[13,"AttachedShaders","","Passed to getProgramParameter after calling attachShader to determine if the shader was attached correctly. Returns false if errors occurred.",7,N],[13,"ActiveAttributes","","Passed to getProgramParameter to get the number of attributes active in a program.",7,N],[13,"ActiveUniforms","","Passed to getProgramParameter to get the number of uniforms active in a program.",7,N],[13,"TransformFeedbackBufferMode","","Passed to getProgramParameter to get the buffer mode when transform feedback is active.",7,N],[13,"TransformFeedbackVaryings","","Passed to getProgramParameter to get the number of varying variables to capture in transform feedback mode",7,N],[13,"ActiveUniformBlocks","","Passed to getProgramParameter to get the number of uniform blocks containing active uniforms",7,N],[4,"ShaderParameter","","Constants passed to WebGLRenderingContext.getShaderParameter() TODO decide if im keeping it public or move to shader_program as it is only used internally i think",N,N],[13,"CompileStatus","","Passed to getShaderParameter to get the status of the compilation. Returns false if the shader was not compiled. You can then query getShaderInfoLog to find the exact error",8,N],[13,"DeleteStatus","","Passed to getShaderParameter to determine if a shader was deleted via deleteShader. Returns true if it was, false otherwise.",8,N],[13,"ShaderType","","Passed to getShaderParameter to get the shader type.",8,N],[4,"BufferKind","","Passed to bindBuffer or bufferData to specify the type of buffer being used.",N,N],[13,"Array","","",9,N],[13,"ElementArray","","",9,N],[13,"CopyReadBuffer","","Buffer for copying from one buffer object to another.",9,N],[13,"CopyWriteBuffer","","Buffer for copying from one buffer object to another.",9,N],[13,"TransformFeedbackBuffer","","Buffer for transform feedback operations.",9,N],[13,"UniformBuffer","","Buffer used for storing uniform blocks.",9,N],[13,"PixelPackBuffer","","Buffer used for pixel transfer operations.",9,N],[13,"PixelUnpackBuffer","","Buffer used for pixel transfer operations.",9,N],[4,"DataHint","","",N,N],[13,"StaticDraw","","Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and not change often.",10,N],[13,"DynamicDraw","","Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and change often.",10,N],[13,"StreamDraw","","Passed to bufferData as a hint about whether the contents of the buffer are likely to not be used often.",10,N],[13,"StaticRead","","Contents of the buffer are likely to be used often and not change often. Contents are read from the buffer, but not written.",10,N],[13,"DynamicRead","","Contents of the buffer are likely to be used often and change often. Contents are read from the buffer, but not written.",10,N],[13,"StreamRead","","Contents of the buffer are likely to not be used often. Contents are read from the buffer, but not written.",10,N],[13,"StaticCopy","","Contents of the buffer are likely to be used often and not change often. Contents are neither written or read by the user.",10,N],[13,"DynamicCopy","","Contents of the buffer are likely to be used often and change often. Contents are neither written or read by the user.",10,N],[13,"StreamCopy","","Contents of the buffer are likely to be used often and not change often. Contents are neither written or read by the user.",10,N],[4,"BufferParameter","","",N,N],[13,"Size","","Passed to getBufferParameter to get a buffer's size.",11,N],[13,"Usage","","Passed to getBufferParameter to get the hint for the buffer passed in when it was created.",11,N],[4,"DataType","","",N,N],[13,"I8","","",12,N],[13,"U8","","",12,N],[13,"I16","","",12,N],[13,"U16","","",12,N],[13,"I32","","",12,N],[13,"U32","","",12,N],[13,"Float","","",12,N],[4,"Flag","","",N,N],[13,"Blend","","Passed to enable/disable to turn on/off blending. Can also be used with getParameter to find the current blending method.",13,N],[13,"CullFace","","Passed to enable/disable to turn on/off culling. Can also be used with getParameter to find the current culling method.",13,N],[13,"DepthTest","","Passed to enable/disable to turn on/off the depth test. Can also be used with getParameter to query the depth test.",13,N],[13,"Dither","","Passed to enable/disable to turn on/off dithering. Can also be used with getParameter to find the current dithering method.",13,N],[13,"PolygonOffsetFill","","Passed to enable/disable to turn on/off the polygon offset. Useful for rendering hidden-line images, decals, and or solids with highlighted edges. Can also be used with getParameter to query the scissor test.",13,N],[13,"SampleAlphaToCoverage","","Passed to enable/disable to turn on/off the alpha to coverage. Used in multi-sampling alpha channels.",13,N],[13,"SampleCoverage","","Passed to enable/disable to turn on/off the sample coverage. Used in multi-sampling.",13,N],[13,"ScissorTest","","Passed to enable/disable to turn on/off the scissor test. Can also be used with getParameter to query the scissor test.",13,N],[13,"StencilTest","","Passed to enable/disable to turn on/off the stencil test. Can also be used with getParameter to query the stencil test.",13,N],[13,"RasterizerDiscard","","Passed to enable/disable to turn on/off that primitives are discarded immediately before the rasterization stage, but after the optional transform feedback stage. gl.clear() commands are ignored.",13,N],[4,"BufferBit","","",N,N],[13,"Depth","","Passed to clear to clear the current depth buffer.",14,N],[13,"Stencil","","Passed to clear to clear the current stencil buffer.",14,N],[13,"Color","","Passed to clear to clear the current color buffer.",14,N],[4,"Primitives","","Passed to drawElements or drawArrays to draw primitives.",N,N],[13,"Points","","Passed to drawElements or drawArrays to draw single points.",15,N],[13,"Lines","","Passed to drawElements or drawArrays to draw lines. Each vertex connects to the one after it.",15,N],[13,"LineLoop","","Passed to drawElements or drawArrays to draw lines. Each set of two vertices is treated as a separate line segment.",15,N],[13,"LineStrip","","Passed to drawElements or drawArrays to draw a connected group of line segments from the first vertex to the last.",15,N],[13,"Triangles","","Passed to drawElements or drawArrays to draw triangles. Each set of three vertices creates a separate triangle.",15,N],[13,"TriangleStrip","","Passed to drawElements or drawArrays to draw a connected group of triangles.",15,N],[13,"TriangleFan","","Passed to drawElements or drawArrays to draw a connected group of triangles. Each vertex connects to the previous and the first vertex in the fan.",15,N],[4,"BlendMode","","Constants passed to WebGLRenderingContext.blendFunc() or WebGLRenderingContext.blendFuncSeparate() to specify the blending mode (for both, RBG and alpha, or separately).",N,N],[13,"Zero","","Passed to blendFunc or blendFuncSeparate to turn off a component.",16,N],[13,"One","","Passed to blendFunc or blendFuncSeparate to turn on a component.",16,N],[13,"SrcColor","","Passed to blendFunc or blendFuncSeparate to multiply a component by the source elements color.",16,N],[13,"OneMinusSrcColor","","Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source elements color.",16,N],[13,"SrcAlpha","","Passed to blendFunc or blendFuncSeparate to multiply a component by the source's alpha.",16,N],[13,"OneMinusSrcAlpha","","Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source's alpha.",16,N],[13,"DstAlpha","","Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's alpha.",16,N],[13,"OneMinusDstAlpha","","Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's alpha.",16,N],[13,"DstColor","","Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's color.",16,N],[13,"OneMinusDstColor","","Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's color.",16,N],[13,"SrcAlphaSaturate","","Passed to blendFunc or blendFuncSeparate to multiply a component by the minimum of source's alpha or one minus the destination's alpha.",16,N],[13,"ConstantColor","","Passed to blendFunc or blendFuncSeparate to specify a constant color blend function.",16,N],[13,"OneMinusConstantColor","","Passed to blendFunc or blendFuncSeparate to specify one minus a constant color blend function.",16,N],[13,"ConstantAlpha","","Passed to blendFunc or blendFuncSeparate to specify a constant alpha blend function.",16,N],[13,"OneMinusConstantAlpha","","Passed to blendFunc or blendFuncSeparate to specify one minus a constant alpha blend function.",16,N],[4,"BlendEquation","","Constants passed to WebGLRenderingContext.blendEquation() or WebGLRenderingContext.blendEquationSeparate() to control how the blending is calculated (for both, RBG and alpha, or separately).",N,N],[13,"FuncAdd","","Passed to blendEquation or blendEquationSeparate to set an addition blend function.",17,N],[13,"FuncSubstract","","Passed to blendEquation or blendEquationSeparate to specify a subtraction blend function (source - destination).",17,N],[13,"FuncReverseSubtract","","Passed to blendEquation or blendEquationSeparate to specify a reverse subtraction blend function (destination - source).",17,N],[13,"Min","","Minimum of source and destination,",17,N],[13,"Max","","Maximum of source and destination,",17,N],[4,"Parameter","","Constants passed to WebGLRenderingContext.getParameter() to specify what information to return.",N,N],[13,"BlendEquation","","Passed to getParameter to get the current RGB blend function. same as BlendEquationRgb",18,N],[13,"BlendEquationAlpha","","Passed to getParameter to get the current alpha blend function. Same as BLEND_EQUATION",18,N],[13,"BlendDstRgb","","Passed to getParameter to get the current destination RGB blend function.",18,N],[13,"BlendSrcRgb","","Passed to getParameter to get the current destination RGB blend function.",18,N],[13,"BlendDstAlpha","","Passed to getParameter to get the current destination alpha blend function.",18,N],[13,"BlendSrcAlpha","","Passed to getParameter to get the current source alpha blend function.",18,N],[13,"BlendColor","","Passed to getParameter to return a the current blend color.",18,N],[13,"ArrayBufferBinding","","Passed to getParameter to get the array buffer binding.",18,N],[13,"ElementArrayBufferBinding","","Passed to getParameter to get the current element array buffer.",18,N],[13,"LineWidth","","Passed to getParameter to get the current lineWidth (set by the lineWidth method).",18,N],[13,"AliasedPointSizeRange","","Passed to getParameter to get the current size of a point drawn with gl.POINTS",18,N],[13,"AliasedLineWidthRange","","Passed to getParameter to get the range of available widths for a line. Returns a length-2 array with the lo value at 0, and hight at 1.",18,N],[13,"CullFaceMode","","Passed to getParameter to get the current value of cullFace. Should return FRONT, BACK, or FRONT_AND_BACK",18,N],[13,"FrontFace","","Passed to getParameter to determine the current value of frontFace. Should return CW or CCW.",18,N],[13,"DepthRange","","Passed to getParameter to return a length-2 array of floats giving the current depth range.",18,N],[13,"DepthWritemask","","Passed to getParameter to determine if the depth write mask is enabled.",18,N],[13,"DepthClearValue","","Passed to getParameter to determine the current depth clear value.",18,N],[13,"DepthFunc","","Passed to getParameter to get the current depth function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL.",18,N],[13,"StencilClearValue","","Passed to getParameter to get the value the stencil will be cleared to.",18,N],[13,"StencilFunc","","Passed to getParameter to get the current stencil function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL.",18,N],[13,"StencilFail","","Passed to getParameter to get the current stencil fail function. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP.",18,N],[13,"StencilPassDepthFail","","Passed to getParameter to get the current stencil fail function should the depth buffer test fail. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP.",18,N],[13,"StencilPassDepthPass","","Passed to getParameter to get the current stencil fail function should the depth buffer test pass. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP.",18,N],[13,"StencilRef","","Passed to getParameter to get the reference value used for stencil tests.",18,N],[13,"StencilValueMask","","",18,N],[13,"StencilWritemask","","",18,N],[13,"StencilBackFunc","","",18,N],[13,"StencilBackFail","","",18,N],[13,"StencilBackPassDepthFail","","",18,N],[13,"StencilBackPassDepthPass","","",18,N],[13,"StencilBackRef","","",18,N],[13,"StencilBackValueMask","","",18,N],[13,"StencilBackWritemask","","",18,N],[13,"Viewport","","Returns an Int32Array with four elements for the current viewport dimensions.",18,N],[13,"ScissorBox","","Returns an Int32Array with four elements for the current scissor box dimensions.",18,N],[13,"ColorClearValue","","",18,N],[13,"ColorWritemask","","",18,N],[13,"UnpackAlignment","","",18,N],[13,"PackAlignment","","",18,N],[13,"MaxTextureSize","","",18,N],[13,"MaxViewportDims","","",18,N],[13,"SubpixelBits","","",18,N],[13,"RedBits","","",18,N],[13,"GreenBits","","",18,N],[13,"BlueBits","","",18,N],[13,"AlphaBits","","",18,N],[13,"DepthBits","","",18,N],[13,"StencilBits","","",18,N],[13,"PolygonOffsetUnits","","",18,N],[13,"PolygonOffsetFactor","","",18,N],[13,"TextureBinding2d","","",18,N],[13,"SampleBuffers","","",18,N],[13,"Samples","","",18,N],[13,"SampleCoverageValue","","",18,N],[13,"SampleCoverageInvert","","",18,N],[13,"CompressedTextureFormats","","",18,N],[13,"Vendor","","",18,N],[13,"Renderer","","",18,N],[13,"Version","","",18,N],[13,"ImplementationColorReadType","","",18,N],[13,"ImplementationColorReadFormat","","",18,N],[13,"BrowserDefaultWebgl","","",18,N],[13,"TextureBindingCubeMap","","",18,N],[13,"MaxCubeMapTextureSize","","",18,N],[4,"VertexAttrib","","Constants passed to WebGLRenderingContext.getVertexAttrib().",N,N],[13,"Current","","Passed to getVertexAttrib to read back the current vertex attribute.",19,N],[13,"ArrayEnabled","","",19,N],[13,"ArraySize","","",19,N],[13,"ArrayStride","","",19,N],[13,"ArrayType","","",19,N],[13,"ArrayNormalized","","",19,N],[13,"ArrayPointer","","",19,N],[13,"ArrayBufferBinding","","",19,N],[4,"Culling","","Constants passed to WebGLRenderingContext.cullFace().",N,N],[13,"Front","","Passed to cullFace to specify that only front faces should be drawn.",20,N],[13,"Back","","Passed to cullFace to specify that only back faces should be drawn.",20,N],[13,"FrontAndBack","","Passed to cullFace to specify that front and back faces should be drawn.",20,N],[4,"Error","","Constants returned from WebGLRenderingContext.getError().",N,N],[13,"NoError","","Returned from getError.",21,N],[13,"InvalidEnum","","Returned from getError.",21,N],[13,"InvalidValue","","Returned from getError.",21,N],[13,"InvalidOperation","","Returned from getError.",21,N],[13,"InvalidFramebufferOperation","","Returned from getError.",21,N],[13,"OutOfMemory","","Returned from getError.",21,N],[13,"ContextLostWebgl","","Returned from getError.",21,N],[4,"FrontFaceDirection","","Constants passed to WebGLRenderingContext.frontFace().",N,N],[13,"CW","","Passed to frontFace to specify the front face of a polygon is drawn in the clockwise direction",22,N],[13,"CCW","","Passed to frontFace to specify the front face of a polygon is drawn in the counter clockwise direction",22,N],[4,"DepthTest","","Constants passed to WebGLRenderingContext.depthFunc().",N,N],[13,"Never","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn.",23,N],[13,"Always","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn.",23,N],[13,"Less","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value.",23,N],[13,"Equal","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value.",23,N],[13,"Lequal","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value.",23,N],[13,"Greater","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value.",23,N],[13,"Gequal","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value.",23,N],[13,"Notequal","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value.",23,N],[4,"StencilTest","","Constants passed to WebGLRenderingContext.stencilFunc().",N,N],[13,"Never","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn.",24,N],[13,"Always","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn.",24,N],[13,"Less","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value.",24,N],[13,"Equal","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value.",24,N],[13,"Lequal","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value.",24,N],[13,"Greater","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value.",24,N],[13,"Gequal","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value.",24,N],[13,"Notequal","","Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value.",24,N],[4,"StencilAction","","Constants passed to WebGLRenderingContext.stencilOp().",N,N],[13,"Zero","","",25,N],[13,"Keep","","",25,N],[13,"Replace","","",25,N],[13,"Incr","","",25,N],[13,"Decr","","",25,N],[13,"Invert","","",25,N],[13,"IncrWrap","","",25,N],[13,"DecrWrap","","",25,N],[4,"PixelType","","",N,N],[13,"UnsignedByte","","",26,N],[13,"UnsignedShort4444","","",26,N],[13,"UnsignedShort5551","","",26,N],[13,"UnsignedShort565","","",26,N],[13,"Float","","",26,N],[4,"PixelFormat","","",N,N],[13,"DepthComponent","","",27,N],[13,"Alpha","","",27,N],[13,"Rgb","","",27,N],[13,"Rgba","","",27,N],[13,"Luminance","","",27,N],[13,"LuminanceAlpha","","",27,N],[4,"PixelReadFormat","","",N,N],[13,"Alpha","","",28,N],[13,"Rgb","","",28,N],[13,"Rgba","","",28,N],[4,"PixelCopyFormat","","",N,N],[13,"Alpha","","",29,N],[13,"Rgb","","",29,N],[13,"Rgba","","",29,N],[13,"Luminance","","",29,N],[13,"LuminanceAlpha","","",29,N],[4,"HintMode","","Constants passed to WebGLRenderingContext.hint() mode argument",N,N],[13,"DontCare","","There is no preference for this behavior.",30,N],[13,"Fastest","","The most efficient behavior should be used.",30,N],[13,"Nicest","","The most correct or the highest quality option should be used.",30,N],[4,"HintTarget","","Constants passed to WebGLRenderingContext.hint() target argument",N,N],[13,"GenerateMipmapHint","","Hint for the quality of filtering when generating mipmap images with WebGLRenderingContext.generateMipmap().",31,N],[13,"FragmentShaderDerivativeHint","","Accuracy of the derivative calculation for the GLSL built-in functions: dFdx, dFdy, and fwidth.",31,N],[4,"TextureKind","","WebGLRenderingContext.texParameterfi or WebGLRenderingContext.bindTexture() \"target\" parameter",N,N],[13,"Texture2d","","",32,N],[13,"TextureCubeMap","","",32,N],[13,"Texture3d","","A three-dimensional texture.",32,N],[13,"Texture2dArray","","A two-dimensional array texture.",32,N],[4,"Texture2DKind","","WebGLRenderingContext.texStorage2D() `target` parameter",N,N],[13,"Texture2d","","",33,N],[13,"TextureCubeMap","","",33,N],[4,"Texture3DKind","","WebGLRenderingContext.texStorage3D() `target` parameter",N,N],[13,"Texture3d","","A three-dimensional texture.",34,N],[13,"Texture2dArray","","A two-dimensional array texture.",34,N],[4,"TextureParameter","","WebGLRenderingContext.texParameterfi \"pname\" parameter",N,N],[13,"MagFilter","","",35,N],[13,"MinFilter","","",35,N],[13,"WrapS","","",35,N],[13,"WrapT","","",35,N],[13,"BaseLevel","","Texture mipmap level",35,N],[13,"CompareFunc","","Comparison function",35,N],[13,"CompareMode","","Texture comparison mode",35,N],[13,"ImmutableFormat","","Immutability of the texture format and size",35,N],[13,"ImmutableLevels","","",35,N],[13,"MaxLevel","","Maximum texture mipmap array level",35,N],[13,"MaxLod","","Texture maximum level-of-detail value",35,N],[13,"MinLod","","Texture minimum level-of-detail value",35,N],[13,"WrapR","","gl.TEXTURE_WRAP_R Wrapping function for texture coordinate r",35,N],[4,"TextureBindPoint","","WebGLRenderingContext.texImage2D() \"target\" parameter",N,N],[13,"Texture2d","","",36,N],[13,"TextureCubeMapPositiveX","","",36,N],[13,"TextureCubeMapNegativeX","","",36,N],[13,"TextureCubeMapPositiveY","","",36,N],[13,"TextureCubeMapNegativeY","","",36,N],[13,"TextureCubeMapPositiveZ","","",36,N],[13,"TextureCubeMapNegativeZ","","",36,N],[4,"TextureMagFilter","","WebGLRenderingContext.texParameterfi \"param\" parameter",N,N],[13,"Nearest","","",37,N],[13,"Linear","","",37,N],[4,"TextureMinFilter","","WebGLRenderingContext.texParameterfi \"param\" parameter",N,N],[13,"Nearest","","",38,N],[13,"Linear","","",38,N],[13,"NearestMipmapNearest","","",38,N],[13,"LinearMipmapNearest","","",38,N],[13,"NearestMipmapLinear","","",38,N],[13,"LinearMipmapLinear","","",38,N],[4,"TextureWrap","","WebGLRenderingContext.texParameterfi \"param\" parameter",N,N],[13,"Repeat","","",39,N],[13,"ClampToEdge","","",39,N],[13,"MirroredRepeat","","",39,N],[4,"Buffers","","Constants passed to WebGLRenderingContext.hint()",N,N],[13,"Framebuffer","","",40,N],[13,"Renderbuffer","","",40,N],[13,"Rgba4","","",40,N],[13,"Rgb5A1","","",40,N],[13,"Rgb565","","",40,N],[13,"DepthComponent16","","",40,N],[13,"StencilIndex","","",40,N],[13,"StencilIndex8","","",40,N],[13,"DepthStencil","","",40,N],[13,"RenderbufferWidth","","",40,N],[13,"RenderbufferHeight","","",40,N],[13,"RenderbufferInternalFormat","","",40,N],[13,"RenderbufferRedSize","","",40,N],[13,"RenderbufferGreenSize","","",40,N],[13,"RenderbufferBlueSize","","",40,N],[13,"RenderbufferAlphaSize","","",40,N],[13,"RenderbufferDepthSize","","",40,N],[13,"RenderbufferStencilSize","","",40,N],[13,"FramebufferAttachmentObjectType","","",40,N],[13,"FramebufferAttachmentObjectName","","",40,N],[13,"FramebufferAttachmentTextureLevel","","",40,N],[13,"FramebufferAttachmentTextureCubeMapFace","","",40,N],[13,"ColorAttachment0","","",40,N],[13,"DepthAttachment","","",40,N],[13,"StencilAttachment","","",40,N],[13,"DepthStencilAttachment","","",40,N],[13,"None","","",40,N],[13,"FramebufferComplete","","",40,N],[13,"FramebufferIncompleteAttachment","","",40,N],[13,"FramebufferIncompleteMissingAttachment","","",40,N],[13,"FramebufferIncompleteDimensions","","",40,N],[13,"FramebufferUnsupported","","",40,N],[13,"FramebufferBinding","","",40,N],[13,"RenderbufferBinding","","",40,N],[13,"MaxRenderbufferSize","","",40,N],[13,"InvalidFramebufferOperation","","",40,N],[4,"PixelStorageMode","","Constants passed to WebGLRenderingContext.pixelStorei()",N,N],[13,"UnpackFlipYWebgl","","",41,N],[13,"UnpackPremultiplyAlphaWebgl","","",41,N],[13,"UnpackColorspaceConversionWebgl","","",41,N],[13,"PackAlignment","","Packing of pixel data into memory. Can be 1, 2, 4, 8 defaults to 4",41,N],[13,"UnpackAlignment","","Unpacking of pixel data from memory Can be 1, 2, 4, 8 defaults to 4",41,N],[13,"PackRowLength","","Number of pixels in a row.",41,N],[13,"PackSkipPixels","","Number of pixel locations skipped before the first pixel is written into memory.",41,N],[13,"PackSkipRows","","Number of rows of pixel locations skipped before the first pixel is written into memory",41,N],[13,"UnpackRowLength","","Number of pixels in a row.",41,N],[13,"UnpackImageHeight","","Image height used for reading pixel data from memory",41,N],[13,"UnpackSkipPixels","","Number of pixel images skipped before the first pixel is read from memory",41,N],[13,"UnpackSkipRows","","Number of rows of pixel locations skipped before the first pixel is read from memory",41,N],[13,"UnpackSkipImages","","Number of pixel images skipped before the first pixel is read from memory",41,N],[4,"ShaderPrecision","","",N,N],[13,"LowFloat","","",42,N],[13,"MediumFloat","","",42,N],[13,"HighFloat","","",42,N],[13,"LowInt","","",42,N],[13,"MediumInt","","",42,N],[13,"HighInt","","",42,N],[4,"UniformType","","Constants passed to WebGLRenderingContext.hint()",N,N],[13,"FloatVec2","","",43,N],[13,"FloatVec3","","",43,N],[13,"FloatVec4","","",43,N],[13,"IntVec2","","",43,N],[13,"IntVec3","","",43,N],[13,"IntVec4","","",43,N],[13,"Bool","","",43,N],[13,"BoolVec2","","",43,N],[13,"BoolVec3","","",43,N],[13,"BoolVec4","","",43,N],[13,"FloatMat2","","",43,N],[13,"FloatMat3","","",43,N],[13,"FloatMat4","","",43,N],[13,"Sampler2d","","",43,N],[13,"SamplerCube","","",43,N],[4,"TextureCompression","","",N,N],[13,"RgbDxt1","","A DXT1-compressed image in an RGB image format.",44,N],[13,"RgbaDxt1","","A DXT1-compressed image in an RGB image format with a simple on/off alpha value.",44,N],[13,"RgbaDxt3","","A DXT3-compressed image in an RGBA image format. Compared to a 32-bit RGBA texture, it offers 4:1 compression.",44,N],[13,"RgbaDxt5","","A DXT5-compressed image in an RGBA image format. It also provides a 4:1 compression, but differs to the DXT3 compression in how the alpha compression is done.",44,N],[4,"TextureUnit","","A texture unit",N,N],[13,"Texture0","","",45,N],[13,"Texture1","","",45,N],[13,"Texture2","","",45,N],[13,"Texture3","","",45,N],[13,"Texture4","","",45,N],[13,"Texture5","","",45,N],[13,"Texture6","","",45,N],[13,"Texture7","","",45,N],[13,"Texture8","","",45,N],[13,"Texture9","","",45,N],[13,"Texture10","","",45,N],[13,"Texture11","","",45,N],[13,"Texture12","","",45,N],[13,"Texture13","","",45,N],[13,"Texture14","","",45,N],[13,"Texture15","","",45,N],[13,"Texture16","","",45,N],[13,"Texture17","","",45,N],[13,"Texture18","","",45,N],[13,"Texture19","","",45,N],[13,"Texture20","","",45,N],[13,"Texture21","","",45,N],[13,"Texture22","","",45,N],[13,"Texture23","","",45,N],[13,"Texture24","","",45,N],[13,"Texture25","","",45,N],[13,"Texture26","","",45,N],[13,"Texture27","","",45,N],[13,"Texture28","","",45,N],[13,"Texture29","","",45,N],[13,"Texture30","","",45,N],[13,"Texture31","","",45,N],[4,"FramebufferKind","","Constants passed to WebGLRenderingContext.bindFramebuffer() and other framebuffer methods",N,N],[13,"Framebuffer","","Collection buffer data storage of color, alpha, depth and stencil buffers used to render an image.",46,N],[13,"DrawFramebuffer","","Equivalent to `Framebuffer`. Used as a destination for drawing, rendering, clearing, and writing operations.",46,N],[13,"ReadFramebuffer","","Used as a source for reading operations.",46,N],[4,"FramebufferStatus","","Constants passed to `WebGLRenderingContext.checkFramebufferStatus()`",N,N],[13,"FramebufferComplete","","The framebuffer is ready to display.",47,N],[13,"FramebufferIncompleteAttachment","","The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete.",47,N],[13,"FramebufferIncompleteMissingAttachment","","There is no attachment.",47,N],[13,"FramebufferIncompleteDimensions","","Height and width of the attachment are not the same.",47,N],[13,"FramebufferUnsupported","","The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer.",47,N],[13,"FramebufferIncompleteMultisample","","The values of gl.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are non-zero if the attached images are a mix of renderbuffers and textures.",47,N],[4,"RenderbufferKind","","Constants passed to `WebGLRenderingContext.framebufferRenderbuffer()`",N,N],[13,"Renderbuffer","","Buffer data storage for single images in a renderable internal format.",48,N],[4,"Attachment","","Constants passed to `WebGLRenderingContext.framebufferRenderbuffer()`",N,N],[13,"ColorAttachment0","","color buffer.",49,N],[13,"DepthAttachment","","depth buffer.",49,N],[13,"StencilAttachment","","stencil buffer.",49,N],[13,"DepthStencilAttachment","","depth and stencil buffer.",49,N],[13,"ColorAttachment1","","",49,N],[13,"ColorAttachment2","","",49,N],[13,"ColorAttachment3","","",49,N],[13,"ColorAttachment4","","",49,N],[13,"ColorAttachment5","","",49,N],[13,"ColorAttachment6","","",49,N],[13,"ColorAttachment7","","",49,N],[13,"ColorAttachment8","","",49,N],[13,"ColorAttachment9","","",49,N],[13,"ColorAttachment10","","",49,N],[13,"ColorAttachment11","","",49,N],[13,"ColorAttachment12","","",49,N],[13,"ColorAttachment13","","",49,N],[13,"ColorAttachment14","","",49,N],[13,"ColorAttachment15","","",49,N],[4,"RenderbufferParameter","","Constants passed to `WebGLRenderingContext.getRenderbufferParameter()`",N,N],[13,"Width","","Returns a GLint indicating the width of the image of the currently bound renderbuffer.",50,N],[13,"Height","","Returns a GLint indicating the height of the image of the currently bound renderbuffer.",50,N],[13,"GreenSize","","Returns a GLint that is the resolution size (in bits) for the green color.",50,N],[13,"BlueSize","","Returns a GLint that is the resolution size (in bits) for the blue color.",50,N],[13,"RedSize","","Returns a GLint that is the resolution size (in bits) for the red color.",50,N],[13,"AlphaSize","","Returns a GLint that is the resolution size (in bits) for the alpha component.",50,N],[13,"DepthSize","","Returns a GLint that is the resolution size (in bits) for the depth component.",50,N],[13,"StencilSize","","Returns a GLint that is the resolution size (in bits) for the stencil component.",50,N],[13,"Samples","","Returns a GLint indicating the number of samples of the image of the currently bound renderbuffer.",50,N],[13,"Format","","",50,N],[4,"RenderbufferFormat","","Constants returned from `WebGLRenderingContext.getRenderbufferParameter()`",N,N],[13,"Rgba4","","4 red bits, 4 green bits, 4 blue bits 4 alpha bits.",51,N],[13,"Rgb565","","5 red bits, 6 green bits, 5 blue bits.",51,N],[13,"Rgb5A1","","5 red bits, 5 green bits, 5 blue bits, 1 alpha bit.",51,N],[13,"DepthComponent16","","16 depth bits.",51,N],[13,"StencilIndex8","","8 stencil bits.",51,N],[4,"AttributeType","","Constants passed to vertexAttribPointer",N,N],[13,"Byte","","signed 8-bit integer, with values in [-128, 127]",52,N],[13,"Short","","signed 16-bit integer, with values in [-32768, 32767]",52,N],[13,"UnsignedByte","","unsigned 8-bit integer, with values in [0, 255]",52,N],[13,"UnsignedShort","","unsigned 16-bit integer, with values in [0, 65535]",52,N],[13,"Float","","32-bit IEEE floating point number",52,N],[13,"HalfFloat","","16-bit IEEE floating point number",52,N],[4,"ColorBuffer","","Constants passed to readBuffer",N,N],[13,"None","","",53,N],[13,"Back","","",53,N],[13,"ColorAttachment0","","color buffer.",53,N],[13,"ColorAttachment1","","",53,N],[13,"ColorAttachment2","","",53,N],[13,"ColorAttachment3","","",53,N],[13,"ColorAttachment4","","",53,N],[13,"ColorAttachment5","","",53,N],[13,"ColorAttachment6","","",53,N],[13,"ColorAttachment7","","",53,N],[13,"ColorAttachment8","","",53,N],[13,"ColorAttachment9","","",53,N],[13,"ColorAttachment10","","",53,N],[13,"ColorAttachment11","","",53,N],[13,"ColorAttachment12","","",53,N],[13,"ColorAttachment13","","",53,N],[13,"ColorAttachment14","","",53,N],[13,"ColorAttachment15","","",53,N],[4,"InformationType","","Constants passed to getInternalformatParameter",N,N],[13,"Samples","","Returns a Int32Array containing sample counts supported for internalformat in descending order.",54,N],[4,"QueryTarget","","Constants passed to beginQuery",N,N],[13,"AnySamplesPassed","","Specifies an occlusion query: these queries detect whether an object is visible (whether the scoped drawing commands pass the depth test and if so, how many samples pass).",55,N],[13,"AnySamplesPassedConservative","","Same as above above, but less accurate and faster version.",55,N],[13,"TransformFeedbackPrimitivesWritten","","Number of primitives that are written to transform feedback buffers.",55,N],[4,"Query","","Constants passed to getQuery",N,N],[13,"Current","","",56,N],[4,"QueryParameter","","Constants passed to getQueryParameter",N,N],[13,"Result","","",57,N],[13,"ResultAvailable","","",57,N],[4,"GPUState","","Constants passed to fenceSync",N,N],[13,"CommandsComplete","","",58,N],[4,"WaitStatus","","Constants passed to clientWaitSync",N,N],[13,"AlreadySignaled","","Indicates that the sync object was signaled when this method was called.",59,N],[13,"TimeoutExpired","","Indicates that the timeout time passed and that the sync object did not become signaled.",59,N],[13,"ConditionSatisfied","","Indicates that the sync object was signaled before the timeout expired.",59,N],[13,"WaitFailed","","Indicates that an error occurred during the execution.",59,N],[4,"SyncStatus","","",N,N],[13,"Signaled","","",60,N],[13,"Unsignaled","","",60,N],[4,"SyncParameter","","Constants passed to getSyncParameter",N,N],[13,"Type","","",61,N],[13,"Status","","",61,N],[13,"Condition","","",61,N],[13,"Flags","","",61,N],[4,"TransformFeedback","","Constants passed to bindTransformFeedback",N,N],[13,"TransformFeedback","","",62,N],[4,"TransformFeedbackMode","","Passed to beginTransformFeedback.",N,N],[13,"Points","","Passed to drawElements or drawArrays to draw single points.",63,N],[13,"Lines","","Passed to drawElements or drawArrays to draw lines. Each vertex connects to the one after it.",63,N],[13,"Triangles","","Passed to drawElements or drawArrays to draw triangles. Each set of three vertices creates a separate triangle.",63,N],[4,"TransformFeedbackBufferMode","","Passed to transformFeedbackVaryings.",N,N],[13,"InterleavedAttribs","","",64,N],[13,"SeparateAttribs","","",64,N],[4,"BufferBase","","Passed to bindBufferBase",N,N],[13,"TransformFeedbackBuffer","","Buffer for transform feedback operations.",65,N],[13,"UniformBuffer","","Buffer used for storing uniform blocks.",65,N],[4,"CompareMode","","",N,N],[13,"None","","",66,N],[13,"CompareRefToTexture","","",66,N],[0,"query","webgl_rs","WebGLQuery and methods",N,N],[3,"WebGLRSQuery","webgl_rs::query","",N,N],[11,"delete","","Deletes this `WebGLRSQuery` object.",67,[[["self"]]]],[11,"is_valid","","Returns true if this is a valid `WebGLRSQuery` object.",67,[[["self"]],["bool"]]],[11,"begin","","Starts an asynchronous query. The target parameter indicates which kind of query to begin.",67,[[["self"],["querytarget"]]]],[11,"result_available","","Indicates whether the `WebGLRSQuery` has a result available.",67,[[["self"]],["bool"]]],[11,"result","","Returns the result of the `WebGLRSQuery`",67,[[["self"]],["u32"]]],[0,"renderbuffer","webgl_rs","WebGLRenderbuffer and methods",N,N],[3,"WebGLRSRenderbuffer","webgl_rs::renderbuffer","The `WebGLRenderbuffer` interface is represents a buffer that can contain an image, or can be source or target of an rendering operation.",N,N],[11,"delete","","Deletes the `WebGLRSRenderbuffer` object",68,[[["self"]]]],[11,"is_valid","","Returns true if the `WebGLRSRenderbuffer` object is valid and false otherwise.",68,[[["self"]],["bool"]]],[11,"bind","","Binds the `WebGLRSRenderbuffer` object to the given target.",68,[[["self"],["renderbufferkind"]]]],[11,"attach_framebuffer","","Attaches this `WebGLRSRenderbuffer` object to a framebuffer.",68,[[["self"],["framebufferkind"],["attachment"],["renderbufferkind"]]]],[0,"rendering_context","webgl_rs","Bindings for all objects and method associated with WebGL2",N,N],[3,"HTMLDocument","webgl_rs::rendering_context","",N,N],[3,"HTMLCanvasElement","","",N,N],[3,"WebGL2RenderingContext","","The WebGL2RenderingContext interface provides the OpenGL ES 3.0 rendering context for the drawing surface of an HTML  element.",N,N],[3,"WebGLShaderPrecisionFormat","","",N,N],[11,"new","","",69,[[["str"]],["webgl2renderingcontext"]]],[11,"buffer_size","","Returns the size of the currently bound buffer in bytes",69,[[["self"],["bufferkind"]],["i32"]]],[11,"buffer_usage","","Returns the usage of the currently bound buffer",69,[[["self"],["bufferkind"]],["datahint"]]],[11,"renderbuffer_internal_format","","Returns the internal format of the currently bound renderbuffer",69,[[["self"],["renderbufferkind"]],["renderbufferformat"]]],[11,"renderbuffer_width","","Returns the width of the image of the currently bound renderbuffer.",69,[[["self"],["renderbufferkind"]],["i32"]]],[11,"renderbuffer_height","","Returns the height of the image of the currently bound renderbuffer.",69,[[["self"],["renderbufferkind"]],["i32"]]],[11,"renderbuffer_green_size","","Returns the resolution size (in bits) for the green color.",69,[[["self"],["renderbufferkind"]],["i32"]]],[11,"renderbuffer_blue_size","","Returns the resolution size (in bits) for the blue color.",69,[[["self"],["renderbufferkind"]],["i32"]]],[11,"renderbuffer_red_size","","Returns the resolution size (in bits) for the red color.",69,[[["self"],["renderbufferkind"]],["i32"]]],[11,"renderbuffer_alpha_size","","Returns the resolution size (in bits) for the alpha component.",69,[[["self"],["renderbufferkind"]],["i32"]]],[11,"renderbuffer_depth_size","","Returns the resolution size (in bits) for the depth component.",69,[[["self"],["renderbufferkind"]],["i32"]]],[11,"renderbuffer_stencil_size","","Returns the resolution size (in bits) for the stencil component.",69,[[["self"],["renderbufferkind"]],["i32"]]],[11,"renderbuffer_samples","","Returns the number of samples of the image of the currently bound renderbuffer.",69,[[["self"],["renderbufferkind"]],["i32"]]],[11,"texture_mag_filter","","Returns the texture magnification filter",69,[[["self"],["texturekind"]],["texturemagfilter"]]],[11,"texture_min_filter","","Returns the texture minification filter",69,[[["self"],["texturekind"]],["textureminfilter"]]],[11,"texture_wrap_s","","Returns the wrapping function for texture coordinate s",69,[[["self"],["texturekind"]],["texturewrap"]]],[11,"texture_wrap_t","","Returns the wrapping function for texture coordinate t",69,[[["self"],["texturekind"]],["texturewrap"]]],[11,"texture_base_level","","Returns the texture mipmap level",69,[[["self"],["texturekind"]],["i32"]]],[11,"texture_compare_func","","Returns the texture comparison function",69,[[["self"],["texturekind"]],["depthtest"]]],[11,"texture_compare_mode","","Returns the texture comparison mode",69,[[["self"],["texturekind"]],["comparemode"]]],[11,"texture_immutable_format","","Returns whether the texture format and size is immutable",69,[[["self"],["texturekind"]],["bool"]]],[11,"texture_immutable_levels","","Returns the immutable levels for a texture",69,[[["self"],["texturekind"]],["u32"]]],[11,"texture_max_level","","Returns the maximum texture mipmap array level",69,[[["self"],["texturekind"]],["i32"]]],[11,"texture_max_lod","","Returns the texture maximum level-of-detail value",69,[[["self"],["texturekind"]],["f32"]]],[11,"texture_min_lod","","Returns the texture minimum level-of-detail value",69,[[["self"],["texturekind"]],["f32"]]],[11,"texture_wrap_r","","Returns the wrapping function for texture coordinate r",69,[[["self"],["texturekind"]],["texturewrap"]]],[11,"buffer_data","","Initializes and creates the buffer object's data store.",69,[[["self"],["bufferkind"],["b"],["datahint"]]]],[11,"buffer_sub_data","","Updates a subset of a buffer object's data store.",69,[[["self"],["bufferkind"],["i64"],["b"]]]],[11,"tex_image_2d","","Specifies and loads a two-dimensional texture image.",69,[[["self"],["texturebindpoint"],["u32"],["pixelcopyformat"],["u32"],["u32"],["pixelcopyformat"],["pixeltype"],["i"]],["result",["jsvalue"]]]],[11,"tex_sub_image_2d","","Specifies a sub-rectangle of the current texture.",69,[[["self"],["texturebindpoint"],["u32"],["u32"],["u32"],["u32"],["u32"],["pixelcopyformat"],["pixeltype"],["i"]],["result",["jsvalue"]]]],[11,"read_pixels","","Reads a block of pixels from a specified rectangle of the current color framebuffer into an array object.",69,[[["self"],["u32"],["u32"],["u32"],["u32"],["pixelreadformat"],["pixeltype"],["i"]],["result",["jsvalue"]]]],[11,"get_buffer_sub_data","","",69,[[["self"],["bufferkind"],["i64"],["b"],["u32"],["u32"]],["result",["jsvalue"]]]],[11,"canvas","","The `WebGLRenderingContext.canvas` property is a read-only reference to the `HTMLCanvasElement` or `OffscreenCanvas` object that is associated with the context. It might be null if it is not associated with a  element or an `OffscreenCanvas` object.",69,[[["self"]],["htmlcanvaselement"]]],[11,"drawing_buffer_width","","The read-only `WebGLRenderingContext.drawingBufferWidth` property represents the actual width of the current drawing buffer. It should match the width attribute of the `<canvas>` element associated with this context, but might differ if the implementation is not able to provide the requested width.",69,[[["self"]],["u32"]]],[11,"drawing_buffer_height","","The read-only `WebGLRenderingContext.drawingBufferHeight` property represents the actual height of the current drawing buffer. It should match the height attribute of the `<canvas>` element associated with this context, but might differ if the implementation is not able to provide the requested height.",69,[[["self"]],["u32"]]],[11,"is_context_lost","","The `WebGLRenderingContext.getContextAttributes()` method returns a `WebGLContextAttributes` object that contains the actual context parameters. Might return `null`, if the context is lost. The WebGLRenderingContext.isContextLost() method returns a Boolean indicating whether or not the WebGL context has been lost.",69,[[["self"]],["bool"]]],[11,"scissor","","The `WebGLRenderingContext.scissor()` method of the WebGL API sets a scissor box, which limits the drawing to a specified rectangle.",69,[[["self"],["i32"],["i32"],["u32"],["u32"]]]],[11,"viewport","","The `WebGLRenderingContext.viewport()` method of the WebGL API sets the viewport, which specifies the affine transformation of x and y from normalized device coordinates to window coordinates.",69,[[["self"],["i32"],["i32"],["u32"],["u32"]]]],[11,"active_texture","","The `WebGLRenderingContext.activeTexture()` method of the WebGL API specifies which texture unit to make active.",69,[[["self"],["textureunit"]]]],[11,"blend_color","","The `WebGLRenderingContext.blendColor()` method of the WebGL API is used to set the source and destination blending factors.",69,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"blend_equation","","The `WebGLRenderingContext.blendEquation()` method of the WebGL API is used to set both the RGB blend equation and alpha blend equation to a single equation.",69,[[["self"],["blendequation"]]]],[11,"blend_equation_separate","","The `WebGLRenderingContext.blendEquationSeparate()` method of the WebGL API is used to set the RGB blend equation and alpha blend equation separately.",69,[[["self"],["blendequation"],["blendequation"]]]],[11,"blend_func","","The `WebGLRenderingContext.blendFunc()` method of the WebGL API defines which function is used for blending pixel arithmetic.",69,[[["self"],["blendmode"],["blendmode"]]]],[11,"blend_func_separate","","The `WebGLRenderingContext.blendFuncSeparate()` method of the WebGL API defines which function is used for blending pixel arithmetic for RGB and alpha components separately.",69,[[["self"],["blendmode"],["blendmode"],["blendmode"],["blendmode"]]]],[11,"clear_color","","The `WebGLRenderingContext.clearColor()` method of the WebGL API specifies the color values used when clearing color buffers.",69,[[["self"],["f32"],["f32"],["f32"],["f32"]]]],[11,"clear_depth","","The `WebGLRenderingContext.clearDepth()` method of the WebGL API specifies the clear value for the depth buffer.",69,[[["self"],["f32"]]]],[11,"clear_stencil","","The `WebGLRenderingContext.clearStencil()` method of the WebGL API specifies the clear value for the stencil buffer.",69,[[["self"],["i32"]]]],[11,"color_mask","","The `WebGLRenderingContext.colorMask()`  method of the WebGL API sets which color components to enable or to disable when drawing or rendering to a WebGLFramebuffer.",69,[[["self"],["bool"],["bool"],["bool"],["bool"]]]],[11,"cull_face","","The `WebGLRenderingContext.cullFace()` method of the WebGL API specifies whether or not front- and/or back-facing polygons can be culled.",69,[[["self"],["culling"]]]],[11,"depth_func","","The `WebGLRenderingContext.depthFunc()` method of the WebGL API specifies a function that compares incoming pixel depth to the current depth buffer value.",69,[[["self"],["depthtest"]]]],[11,"depth_mask","","The `WebGLRenderingContext.depthMask()` method of the WebGL API sets whether writing into the depth buffer is enabled or disabled.",69,[[["self"],["bool"]]]],[11,"depth_range","","The `WebGLRenderingContext.depthRange()` method of the WebGL API specifies the depth range mapping from normalized device coordinates to window or viewport coordinates.",69,[[["self"],["f32"],["f32"]]]],[11,"disable","","The `WebGLRenderingContext.disable()` method of the WebGL API disables specific WebGL capabilities for this context.",69,[[["self"],["flag"]]]],[11,"enable","","The `WebGLRenderingContext.enable()` method of the WebGL API enables specific WebGL capabilities for this context.",69,[[["self"],["flag"]]]],[11,"front_face","","The `WebGLRenderingContext.frontFace()` method of the WebGL API specifies whether polygons are front- or back-facing by setting a winding orientation.",69,[[["self"],["frontfacedirection"]]]],[11,"get_error","","The `WebGLRenderingContext.getParameter()` method of the WebGL API returns a value for the passed parameter name. The `WebGLRenderingContext.getError()` method of the WebGL API returns error information.",69,[[["self"]],["error"]]],[11,"hint","","The `WebGLRenderingContext.hint()` method of the WebGL API specifies hints for certain behaviors. The interpretation of these hints depend on the implementation.",69,[[["self"],["hinttarget"],["hintmode"]]]],[11,"is_enabled","","The `WebGLRenderingContext.isEnabled()` method of the WebGL API tests whether a specific WebGL capability is enabled or not for this context.",69,[[["self"],["flag"]]]],[11,"line_width","","The `WebGLRenderingContext.lineWidth()` method of the WebGL API sets the line width of rasterized lines.",69,[[["self"],["f32"]]]],[11,"pixel_storei","","The `WebGLRenderingContext.pixelStorei()` method of the WebGL API specifies the pixel storage modes.",69,[[["self"],["pixelstoragemode"],["i32"]]]],[11,"polygon_offset","","The `WebGLRenderingContext.polygonOffset()` method of the WebGL API specifies the scale factors and units to calculate depth values.",69,[[["self"],["f32"],["f32"]]]],[11,"sample_coverage","","The `WebGLRenderingContext.sampleCoverage()` method of the WebGL API specifies multi-sample coverage parameters for anti-aliasing effects.",69,[[["self"],["f32"],["bool"]]]],[11,"stencil_func","","The `WebGLRenderingContext.stencilFunc()` method of the WebGL API sets the front and back function and reference value for stencil testing.",69,[[["self"],["stenciltest"],["i32"],["u32"]]]],[11,"stencil_func_separate","","The `WebGLRenderingContext.stencilFuncSeparate()` method of the WebGL API sets the front and/or back function and reference value for stencil testing.",69,[[["self"],["culling"],["stenciltest"],["i32"],["u32"]]]],[11,"stencil_mask","","The `WebGLRenderingContext.stencilMask()` method of the WebGL API controls enabling and disabling of both the front and back writing of individual bits in the stencil planes.",69,[[["self"],["u32"]]]],[11,"stencil_mask_separate","","The `WebGLRenderingContext.stencilMaskSeparate()` method of the WebGL API controls enabling and disabling of front and/or back writing of individual bits in the stencil planes.",69,[[["self"],["culling"],["u32"]]]],[11,"stencil_op","","The `WebGLRenderingContext.stencilOp()` method of the WebGL API sets both the front and back-facing stencil test actions.",69,[[["self"],["stencilaction"],["stencilaction"],["stencilaction"]]]],[11,"stencil_op_separate","","The `WebGLRenderingContext.stencilOpSeparate()` method of the WebGL API sets the front and/or back-facing stencil test actions.",69,[[["self"],["culling"],["stencilaction"],["stencilaction"],["stencilaction"]]]],[11,"check_framebuffer_status","","The `WebGLRenderingContext.checkFramebufferStatus()` method of the WebGL API returns the completeness status of the WebGLFramebuffer object.",69,[[["self"],["framebufferkind"]],["bool"]]],[11,"renderbuffer_storage","","The `WebGLRenderingContext.renderbufferStorage()` method of the WebGL API creates and initializes a renderbuffer object's data store.",69,[[["self"],["renderbufferkind"],["renderbufferformat"],["u32"],["u32"]]]],[11,"copy_tex_image_2d","","The `WebGLRenderingContext.copyTexImage2D()` method of the WebGL API copies pixels from the current WebGLFramebuffer into a 2D texture image.",69,[[["self"],["texturebindpoint"],["u32"],["pixelcopyformat"],["i32"],["i32"],["u32"],["u32"],["u32"]]]],[11,"copy_tex_sub_image_2d","","The `WebGLRenderingContext.copyTexSubImage2D()` method of the WebGL API copies pixels from the current WebGLFramebuffer into an existing 2D texture sub-image.",69,[[["self"],["texturebindpoint"],["u32"],["i32"],["i32"],["i32"],["i32"],["u32"],["u32"]]]],[11,"generate_mipmap","","The `WebGLRenderingContext.generateMipmap()` method of the WebGL API generates a set of mipmaps for a WebGLTexture object.",69,[[["self"],["texturekind"]]]],[11,"tex_parameter_f","","The `WebGLRenderingContext.texParameter[fi]()` methods of the WebGL API set texture parameters.",69,[[["self"],["texturekind"],["textureparameter"],["f32"]]]],[11,"tex_parameter_i","","The `WebGLRenderingContext.texParameter[fi]()` methods of the WebGL API set texture parameters.",69,[[["self"],["texturekind"],["textureparameter"],["i32"]]]],[11,"get_shader_precision_format","","The `WebGLRenderingContext.getShaderPrecisionFormat()` method of the WebGL API returns a new WebGLShaderPrecisionFormat object describing the range and precision for the specified shader numeric format.",69,[[["self"],["shaderkind"],["shaderprecision"]],["webglshaderprecisionformat"]]],[11,"disable_vertex_attrib_array","","The `WebGLRenderingContext.disableVertexAttribArray()` method of the WebGL API turns the generic vertex attribute array off at a given index position.",69,[[["self"],["u32"]]]],[11,"enable_vertex_attrib_array","","The `WebGLRenderingContext method enableVertexAttribArray()`, part of the WebGL API, turns on the generic vertex attribute array at the specified index into the list of attribute arrays.",69,[[["self"],["u32"]]]],[11,"get_vertex_attrib_offset","","The `WebGLRenderingContext.getVertexAttrib()` method of the WebGL API returns information about a vertex attribute at a given position. The `WebGLRenderingContext.getVertexAttribOffset()` method of the WebGL API returns the address of a specified vertex attribute.",69,[[["self"],["u32"],["vertexattrib"]],["i64"]]],[11,"vertex_attrib_1f","","The WebGLRenderingContext.vertexAttrib[1234]fv methods of the WebGL API specify constant values for generic vertex attributes.",69,[[["self"],["u32"],["f32"]]]],[11,"vertex_attrib_2f","","The WebGLRenderingContext.vertexAttrib[1234]fv methods of the WebGL API specify constant values for generic vertex attributes.",69,[[["self"],["u32"],["f32"],["f32"]]]],[11,"vertex_attrib_3f","","The WebGLRenderingContext.vertexAttrib[1234]fv methods of the WebGL API specify constant values for generic vertex attributes.",69,[[["self"],["u32"],["f32"],["f32"],["f32"]]]],[11,"vertex_attrib_4f","","The WebGLRenderingContext.vertexAttrib[1234]fv methods of the WebGL API specify constant values for generic vertex attributes.",69,[[["self"],["u32"],["f32"],["f32"],["f32"],["f32"]]]],[11,"vertex_attrib_1fv","","The WebGLRenderingContext.vertexAttrib[1234]fv methods of the WebGL API specify constant values for generic vertex attributes.",69,[[["self"],["u32"],["vec",["f32"]]]]],[11,"vertex_attrib_2fv","","The WebGLRenderingContext.vertexAttrib[1234]fv methods of the WebGL API specify constant values for generic vertex attributes.",69,[[["self"],["u32"],["vec",["f32"]]]]],[11,"vertex_attrib_3fv","","The WebGLRenderingContext.vertexAttrib[1234]fv methods of the WebGL API specify constant values for generic vertex attributes.",69,[[["self"],["u32"],["vec",["f32"]]]]],[11,"vertex_attrib_4fv","","The WebGLRenderingContext.vertexAttrib[1234]fv methods of the WebGL API specify constant values for generic vertex attributes.",69,[[["self"],["u32"],["vec",["f32"]]]]],[11,"vertex_attrib_pointer","","The `WebGLRenderingContext.vertexAttribPointer()` method of the WebGL API binds the buffer currently bound to gl.ARRAY_BUFFER to a generic vertex attribute of the current vertex buffer object and specifies its layout.",69,[[["self"],["u32"],["attributesize"],["attributetype"],["bool"],["u8"],["i32"]]]],[11,"clear","","The `WebGLRenderingContext.clear()` method of the WebGL API clears buffers to preset values.",69,[[["self"],["bufferbit"]]]],[11,"draw_arrays","","The `WebGLRenderingContext.drawArrays()` method of the WebGL API renders primitives from array data.",69,[[["self"],["primitives"],["u32"],["u32"]]]],[11,"draw_elements","","The `WebGLRenderingContext.drawElements()` method of the WebGL API renders primitives from array data.",69,[[["self"],["primitives"],["u32"],["datatype"],["i64"]]]],[11,"finish","","The `WebGLRenderingContext.finish()` method of the WebGL API blocks execution until all previously called commands are finished.",69,[[["self"]]]],[11,"flush","","The `WebGLRenderingContext.flush()` method of the WebGL API empties different buffer commands, causing all commands to be executed as quickly as possible.",69,[[["self"]]]],[11,"copy_buffer_sub_data","","The `WebGL2RenderingContext.copyBufferSubData()` method of the WebGL 2 API copies part of the data of a buffer to another buffer.",69,[[["self"],["bufferkind"],["bufferkind"],["i64"],["i64"],["u32"]]]],[11,"blit_framebuffer","","The `WebGL2RenderingContext.blitFramebuffer()` method of the WebGL 2 API transfers a block of pixels from the read framebuffer to the draw framebuffer.",69,[[["self"],["i32"],["i32"],["i32"],["i32"],["i32"],["i32"],["i32"],["i32"],["bufferbit"],["texturemagfilter"]]]],[11,"read_buffer","","The `WebGL2RenderingContext.invalidateFramebuffer()` method of the WebGL 2 API invalidates the contents of attachments in a framebuffer. The `WebGL2RenderingContext.readBuffer()` method of the WebGL 2 API selects a color buffer as the source for pixels for subsequent calls to copyTexImage2D, copyTexSubImage2D, copyTexSubImage3D or readPixels.",69,[[["self"],["colorbuffer"]]]],[11,"get_internal_format_parameter","","The `WebGL2RenderingContext.getInternalformatParameter()` method of the WebGL 2 API returns information about implementation-dependent support for internal formats. FIXME: not sure about internal_format enum",69,[[["self"],["renderbufferkind"],["renderbufferformat"],["informationtype"]],["vec",["i32"]]]],[11,"renderbuffer_storage_multisample","","The `WebGL2RenderingContext.renderbufferStorageMultisample()` method of the WebGL 2 API returns creates and initializes a renderbuffer object's data store and allows specifying a number of samples to be used.",69,[[["self"],["renderbufferkind"],["u32"],["renderbufferformat"],["u32"],["u32"]]]],[11,"tex_storage_2d","","The `WebGL2RenderingContext.texStorage2D()` method of the WebGL API specifies all levels of two-dimensional texture storage. FIXME: revisit internal format",69,[[["self"],["texture2dkind"],["u32"],["renderbufferformat"],["u32"],["u32"]]]],[11,"tex_storage_3d","","The `WebGL2RenderingContext.texStorage3D()` method of the WebGL API specifies all levels of a three-dimensional texture or two-dimensional array texture. FIXME: revisit internal format",69,[[["self"],["texture3dkind"],["u32"],["renderbufferformat"],["u32"],["u32"],["u32"]]]],[11,"tex_image_3d","","The `WebGLRenderingContext.texImage3D()` method of the WebGL API specifies a three-dimensional texture image. FIXME: revisit internalformat, format, data_type FIXME: border is always 0 FIXME: different src types",69,[[["self"],["texture3dkind"],["u32"],["renderbufferformat"],["u32"],["u32"],["u32"],["u32"],["renderbufferformat"],["renderbufferformat"],["vec",["u8"]],["u32"]]]],[11,"tex_sub_image_3d","","The `WebGL2RenderingContext.texSubImage3D()` method of the WebGL API specifies a sub-rectangle of the current texture. FIXME: revisit format, data_type FIXME: srcdata more types",69,[[["self"],["texture3dkind"],["u32"],["u32"],["u32"],["u32"],["u32"],["u32"],["u32"],["renderbufferformat"],["renderbufferformat"],["vec",["u8"]],["u32"]]]],[11,"copy_tex_sub_image_3d","","The `WebGL2RenderingContext.copyTexSubImage3D()` method of the WebGL API copies pixels from the current WebGLFramebuffer into an existing 3D texture sub-image.",69,[[["self"],["texture3dkind"],["u32"],["u32"],["u32"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"vertex_attrib_i_4i","","The `WebGL2RenderingContext.vertexAttribI4[u]i[v]()` methods of the WebGL 2 API specify integer values for generic vertex attributes.",69,[[["self"],["u32"],["i32"],["i32"],["i32"],["i32"]]]],[11,"vertex_attrib_i_4ui","","The `WebGL2RenderingContext.vertexAttribI4[u]i[v]()` methods of the WebGL 2 API specify integer values for generic vertex attributes.",69,[[["self"],["u32"],["u32"],["u32"],["u32"],["u32"]]]],[11,"vertex_attrib_i_4iv","","The `WebGL2RenderingContext.vertexAttribI4[u]i[v]()` methods of the WebGL 2 API specify integer values for generic vertex attributes.",69,[[["self"],["u32"],["vec",["i32"]]]]],[11,"vertex_attrib_i_4uiv","","The `WebGL2RenderingContext.vertexAttribI4[u]i[v]()` methods of the WebGL 2 API specify integer values for generic vertex attributes.",69,[[["self"],["u32"],["vec",["u32"]]]]],[11,"vertex_attrib_i_pointer","","The `WebGL2RenderingContext.vertexAttribIPointer()` method of the WebGL 2 API specifies integer data formats and locations of vertex attributes in a vertex attributes array. FIXME: revisit data_type",69,[[["self"],["u32"],["attributesize"],["attributetype"],["u32"],["i64"]]]],[11,"vertex_attrib_divisor","","The `WebGL2RenderingContext.vertexAttribDivisor()` method of the WebGL 2 API modifies the rate at which generic vertex attributes advance when rendering multiple instances of primitives with gl.drawArraysInstanced() and gl.drawElementsInstanced().",69,[[["self"],["u32"],["u32"]]]],[11,"draw_arrays_instanced","","The `WebGL2RenderingContext.drawArraysInstanced()` method of the WebGL 2 API renders primitives from array data like the gl.drawArrays() method. In addition, it can execute multiple instances of the range of elements.",69,[[["self"],["primitives"],["i32"],["u32"],["u32"]]]],[11,"draw_elements_instanced","","The `WebGL2RenderingContext.drawElementsInstanced()` method of the WebGL 2 API renders primitives from array data like the gl.drawElements() method. In addition, it can execute multiple instances of a set of elements. FIXME: revisit data_type",69,[[["self"],["primitives"],["u32"],["attributetype"],["i64"],["u32"]]]],[11,"draw_range_elements","","The `WebGL2RenderingContext.drawRangeElements()` method of the WebGL API renders primitives from array data in a given range. FIXME: revisit data_type",69,[[["self"],["primitives"],["u32"],["u32"],["u32"],["attributetype"],["i64"]]]],[11,"clear_buffer_fv","","The `WebGL2RenderingContext.drawBuffers()` method of the WebGL 2 API defines draw buffers to which fragment colors are written into. The draw buffer settings are part of the state of the currently bound framebuffer or the drawingbuffer if no framebuffer is bound. The `WebGL2RenderingContext.clearBuffer[fiuv]()` methods of the WebGL 2 API clear buffers from the currently bound framebuffer. FIXME values is array of rgba",69,[[["self"],["bufferbit"],["i32"],["vec",["u8"]],["u32"]]]],[11,"clear_buffer_iv","","The `WebGL2RenderingContext.clearBuffer[fiuv]()` methods of the WebGL 2 API clear buffers from the currently bound framebuffer. FIXME values is array of rgba",69,[[["self"],["bufferbit"],["i32"],["vec",["u8"]],["u32"]]]],[11,"clear_buffer_uiv","","The `WebGL2RenderingContext.clearBuffer[fiuv]()` methods of the WebGL 2 API clear buffers from the currently bound framebuffer. FIXME values is array of rgba",69,[[["self"],["bufferbit"],["i32"],["vec",["u8"]],["u32"]]]],[11,"clear_buffer_fi","","The `WebGL2RenderingContext.clearBuffer[fiuv]()` methods of the WebGL 2 API clear buffers from the currently bound framebuffer. FIXME buffer can only be DEPTH_STENCIL",69,[[["self"],["bufferbit"],["i32"],["f32"],["i32"]]]],[11,"begin_transform_feedback","","The WebGL2RenderingContext.beginTransformFeedback() method of the WebGL 2 API starts a transform feedback operation.",69,[[["self"],["transformfeedbackmode"]]]],[11,"end_transform_feedback","","The WebGL2RenderingContext.endTransformFeedback() method of the WebGL 2 API ends a transform feedback operation.",69,[[["self"]]]],[11,"pause_transform_feedback","","The `WebGL2RenderingContext.transformFeedbackVaryings()` method of the WebGL 2 API specifies values to record in WebGLTransformFeedback buffers. The WebGL2RenderingContext.pauseTransformFeedback() method of the WebGL 2 API pauses a transform feedback operation.",69,[[["self"]]]],[11,"resume_transform_feedback","","The WebGL2RenderingContext.resumeTransformFeedback() method of the WebGL 2 API resumes a transform feedback operation.",69,[[["self"]]]],[11,"end_query","","The `WebGL2RenderingContext.endQuery()` method of the WebGL 2 API marks the end of a given query target.",69,[[["self"],["querytarget"]]]],[11,"range_min","","The base 2 log of the absolute value of the minimum value that can be represented.",70,[[["self"]],["u32"]]],[11,"range_max","","The base 2 log of the absolute value of the maximum value that can be represented.",70,[[["self"]],["u32"]]],[11,"precision","","The number of bits of precision that can be represented. For integer formats this value is always 0.",70,[[["self"]],["u32"]]],[0,"sampler","webgl_rs","WebGLSampler and methods",N,N],[3,"WebGLRSSampler","webgl_rs::sampler","",N,N],[11,"create_sampler","webgl_rs::rendering_context","Creates and initializes a `WebGLRSSampler` object.",69,[[["self"]],["webglrssampler"]]],[11,"delete","webgl_rs::sampler","Deletes this `WebGLRSSampler` object.",71,[[["self"]]]],[11,"bind","","Binds this `WebGLRSSampler` object to the texture unit at the passed index.",71,[[["self"],["u32"]]]],[11,"is_valid","","Returns true if this is a valid `WebGLRSSampler` object.",71,[[["self"]],["bool"]]],[11,"texture_compare_func","","Returns the texture comparison function for this `WebGLRSSampler` object.",71,[[["self"]],["depthtest"]]],[11,"set_texture_compare_func","","Sets the texture comparison function for this `WebGLRSSampler` object.",71,[[["self"],["depthtest"]]]],[11,"texture_compare_mode","","Returns the texture comparison mode for this `WebGLRSSampler` object.",71,[[["self"]],["comparemode"]]],[11,"set_texture_compare_mode","","Sets the texture comparison mode for this `WebGLRSSampler` object.",71,[[["self"],["comparemode"]]]],[11,"texture_mag_filter","","Returns the texture magnification filter for this `WebGLRSSampler` object.",71,[[["self"]],["texturemagfilter"]]],[11,"set_texture_mag_filter","","Sets the texture magnification filter for this `WebGLRSSampler` object.",71,[[["self"],["texturemagfilter"]]]],[11,"texture_max_lod","","Returns the maximum level-of-detail value for this `WebGLRSSampler` object.",71,[[["self"]],["f32"]]],[11,"set_texture_max_lod","","Sets the maximum level-of-detail value for this `WebGLRSSampler` object.",71,[[["self"],["f32"]]]],[11,"texture_min_filter","","Returns the texture minification filter for this `WebGLRSSampler` object",71,[[["self"]],["textureminfilter"]]],[11,"set_texture_min_filter","","Sets the texture minification filter for this `WebGLRSSampler` object",71,[[["self"],["textureminfilter"]]]],[11,"texture_min_lod","","Returns the minimum level-of-detail value for this `WebGLRSSampler` object.",71,[[["self"]],["f32"]]],[11,"set_texture_min_lod","","Sets the minimum level-of-detail value for this `WebGLRSSampler` object.",71,[[["self"],["f32"]]]],[11,"texture_wrap_r","","Returns the texture wrapping function for the texture coordinate r for this `WebGLRSSampler` object.",71,[[["self"]],["texturewrap"]]],[11,"set_texture_wrap_r","","Sets the texture wrapping function for the texture coordinate r for this `WebGLRSSampler` object.",71,[[["self"],["texturewrap"]]]],[11,"texture_wrap_s","","Return the texture wrapping function for the texture coordinate s for this `WebGLRSSampler` object.",71,[[["self"]],["texturewrap"]]],[11,"set_texture_wrap_s","","Sets the texture wrapping function for the texture coordinate s for this `WebGLRSSampler` object.",71,[[["self"],["texturewrap"]]]],[11,"texture_wrap_t","","Returns the texture wrapping function for the texture coordinate t for this `WebGLRSSampler` object.",71,[[["self"]],["texturewrap"]]],[11,"set_texture_wrap_t","","Sets the texture wrapping function for the texture coordinate t for this `WebGLRSSampler` object.",71,[[["self"],["texturewrap"]]]],[0,"shader_program","webgl_rs","WebGLProgram and WebGLShader and methods",N,N],[3,"WebGLRSProgram","webgl_rs::shader_program","The `WebGLRSProgram` is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL). These are then linked into a usable program.",N,N],[3,"WebGLRSShader","","The `WebGLRSShader` is part of the WebGL API and can either be a vertex or a fragment shader. A `WebGLRSProgram` requires both types of shaders.",N,N],[3,"WebGLActiveInfo","","",N,N],[11,"create_program","webgl_rs::rendering_context","Creates and initializes a `WebGLRSProgram`",69,[[["self"]],["webglrsprogram"]]],[11,"delete","webgl_rs::shader_program","Deletes this `WebGLRSProgram` object. This method has no effect if the program has already been deleted.",72,[[["self"]]]],[11,"detach_shader","","Detaches a previously attached `WebGLRSShader` from this `WebGLRSProgram`.",72,[[["self"],["webglrsshader"]]]],[11,"attach_shader","","Attaches a `WebGLRSShader` to this `WebGLRSProgram`.",72,[[["self"],["webglrsshader"]]]],[11,"bind_attrib_location","","Binds a generic vertex index to an attribute variable for this `WebGLRSProgram`",72,[[["self"],["u32"],["str"]]]],[11,"info_log","","Returns the information log for this `WebGLRSProgram` object. It contains errors that occurred during failed linking or validation of this object.",72,[[["self"]],["string"]]],[11,"is_valid","","Returns true if this `WebGLRSProgram` is valid, false otherwise.",72,[[["self"]],["bool"]]],[11,"link","","Links this `WebGLRSProgram` to the attached vertex and fragment shaders.",72,[[["self"]]]],[11,"enable","","Sets this `WebGLRSProgram` as part of the current rendering state.",72,[[["self"]]]],[11,"validate","","Validates this `WebGLRSProgram`. Checks if it is successfully linked and if it can be used in the current WebGL state.",72,[[["self"]]]],[11,"active_attrib","","Returns a `WebGLActiveInfo` object containing size, type, and name of a vertex attribute.",72,[[["self"],["u32"]],["webglactiveinfo"]]],[11,"active_uniform","","Returns a WebGLActiveInfo object containing size, type, and name of a uniform attribute.",72,[[["self"],["u32"]],["webglactiveinfo"]]],[11,"attrib_location","","Returns the location of an attribute variable in this `WebGLRSProgram`.",72,[[["self"],["str"]],["u32"]]],[11,"uniform_location","","Returns the location of a specific uniform variable which is part this `WebGLRSProgram`.",72,[[["self"],["str"]],["webglrsuniformlocation"]]],[11,"frag_data_location","","Returns the binding of color numbers to user-defined varying out variables.",72,[[["self"],["str"]],["i32"]]],[11,"transform_feedback_varying","","Returns information about varying variables from WebGLTransformFeedback buffers.",72,[[["self"],["u32"]],["webglactiveinfo"]]],[11,"uniform_block_index","","Retrieves the index of a uniform block in this `WebGLRSProgram`.",72,[[["self"],["str"]],["u32"]]],[11,"active_uniform_block_name","","Retrieves the name of the active uniform block at a given index in this `WebGLRSProgram`.",72,[[["self"],["u32"]],["string"]]],[11,"assign_uniform_block_binding","","Asigns binding points for active uniform blocks.",72,[[["self"],["u32"],["u32"]]]],[11,"delete_status","","Indicates whether or not the program is flagged for deletion.",72,[[["self"]],["bool"]]],[11,"link_status","","Indicates whether or not the last link operation was successful.",72,[[["self"]],["bool"]]],[11,"validate_status","","Indicates whether or not the last validation operation was successful.",72,[[["self"]],["bool"]]],[11,"attached_shaders","","Returns the number of attached shaders to a program.",72,[[["self"]],["i32"]]],[11,"active_attributes","","Returns the number of active attribute variables to a program.",72,[[["self"]],["i32"]]],[11,"active_uniforms","","Returns the number of active uniform variables to a program.",72,[[["self"]],["i32"]]],[11,"transform_feedback_buffer_mode","","Returns the buffer mode when transform feedback is active. May be `SeparateAttribs` or `InterleavedAttribs`.",72,[[["self"]],["transformfeedbackbuffermode"]]],[11,"transform_feedback_varyings","","Returns the number of varying variables to capture in transform feedback mode.",72,[[["self"]],["i32"]]],[11,"active_uniform_blocks","","",72,[[["self"]],["i32"]]],[11,"create_shader","webgl_rs::rendering_context","Creates a WebGLRSShader that can then be configured further using `shader_source()` and `compile_shader()`.",69,[[["self"],["shaderkind"]],["webglrsshader"]]],[11,"compile","webgl_rs::shader_program","Compiles a GLSL shader into binary data so that it can be used by a `WebGLRSProgram`.",73,[[["self"]]]],[11,"delete","","Deletes this `WebGLRSShader` object.",73,[[["self"]]]],[11,"info_log","","Returns the information log for the specified `WebGLRSShader` object. It contains warnings, debugging and compile information.",73,[[["self"]],["string"]]],[11,"shader_source","","Returns the source code of this `WebGLRSShader` as a `String`.",73,[[["self"]],["string"]]],[11,"is_valid","","Returns true if this `WebGLRSShader` is valid, false otherwise.",73,[[["self"]],["bool"]]],[11,"set_shader_source","","Sets the source code of the `WebGLRSShader` object.",73,[[["self"],["str"]]]],[11,"delete_status","","Returns a bool indicating whether or not the `WebGLRSShader` is flagged for deletion.",73,[[["self"]],["bool"]]],[11,"compile_status","","Returns a bool indicating whether or not the last compilation was successful.",73,[[["self"]],["bool"]]],[11,"kind","","Returns a `ShaderKind` value indicating whether the shader is a vertex shader or fragment shader.",73,[[["self"]],["shaderkind"]]],[11,"name","","The read-only name of the requested variable.",74,[[["self"]],["string"]]],[11,"size","","The read-only size of the requested variable.",74,[[["self"]],["u32"]]],[11,"data_type","","The read-only type of the requested variable.",74,[[["self"]],["u32"]]],[0,"sync","webgl_rs","WebGLSync and methods",N,N],[3,"WebGLRSSync","webgl_rs::sync","",N,N],[3,"WebGLSync","","",N,N],[11,"fence_sync","webgl_rs::rendering_context","Creates a new `WebGLRSSync` object and inserts it into the GL command stream.",69,[[["self"],["gpustate"],["u32"]],["webglrssync"]]],[11,"delete","webgl_rs::sync","Deletes this `WebGLRSSync` object",75,[[["self"]]]],[11,"is_valid","","Returns true if this is a valid `WebGLRSSync` object.  ",75,[[["self"]],["bool"]]],[11,"client_wait","","Blocks and waits for this `WebGLRSSync` object to become signaled or a given timeout to be passed.",75,[[["self"],["u32"],["i64"]],["waitstatus"]]],[11,"wait","","Returns immediately, but waits on the GL server until the `WebGLRSSync` object is signaled.",75,[[["self"],["u32"],["i64"]]]],[11,"status","","Returns the status of this `WebGLRSSync` object.",75,[[["self"]],["syncstatus"]]],[0,"texture","webgl_rs","WebGLTexture and methods",N,N],[3,"WebGLRSTexture","webgl_rs::texture","The WebGLTexture interface is part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations.",N,N],[11,"create_texture","webgl_rs::rendering_context","Creates and initializes a WebGLRSTexture",69,[[["self"]],["webglrstexture"]]],[11,"delete","webgl_rs::texture","Deletes the `WebGLRSTexture` object.",76,[[["self"]]]],[11,"bind","","Binds the `WebGLRSTexture` to a target",76,[[["self"],["texturekind"]]]],[11,"is_valid","","Returns true if the `WebGLRSTexture` is valid and false otherwise.",76,[[["self"]],["bool"]]],[11,"attach_framebuffer","","Attaches this `WebGLRSTexture` object to a framebuffer.",76,[[["self"],["framebufferkind"],["attachment"],["texturebindpoint"],["i32"]]]],[11,"attach_layer_framebuffer","","Attaches a single layer of this `WebGLRSTexture` object to a framebuffer.TextureBindPoint",76,[[["self"],["framebufferkind"],["attachment"],["i32"],["i32"]]]],[0,"transform_feedback","webgl_rs","WebGLTransformFeedback and methods",N,N],[3,"WebGLRSTransformFeedback","webgl_rs::transform_feedback","",N,N],[3,"WebGLTransformFeedback","","",N,N],[11,"create_transform_feedback","webgl_rs::rendering_context","Creates and initializes a `WebGLRSTransformFeedback` object.",69,[[["self"]],["webglrstransformfeedback"]]],[11,"delete","webgl_rs::transform_feedback","Deletes this `WebGLRSTransformFeedback` object.",77,[[["self"]]]],[11,"is_valid","","Returns true if this is a valid `WebGLRSTransformFeedback` object.",77,[[["self"]],["bool"]]],[11,"bind","","Binds this `WebGLRSTransformFeedback` object to the current GL state.",77,[[["self"],["transformfeedback"]]]],[0,"uniform_location","webgl_rs","WebGLUniformLocation and methods",N,N],[3,"WebGLRSUniformLocation","webgl_rs::uniform_location","",N,N],[3,"WebGLUniformLocation","","FIXME: would prefer this to be pub(crate) but does not seem to work, not sure if it is a limitation of wasm_bindgen or if it is just not possible in rust.",N,N],[11,"uniform_1f","webgl_rs::rendering_context","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["f32"]]]],[11,"uniform_2f","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["f32"],["f32"]]]],[11,"uniform_3f","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["f32"],["f32"],["f32"]]]],[11,"uniform_4f","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["f32"],["f32"],["f32"],["f32"]]]],[11,"uniform_1i","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["i32"]]]],[11,"uniform_2i","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["i32"],["i32"]]]],[11,"uniform_3i","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["i32"],["i32"],["i32"]]]],[11,"uniform_4i","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["i32"],["i32"],["i32"],["i32"]]]],[11,"uniform_1fv","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["f32"]]]]],[11,"uniform_2fv","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["f32"]]]]],[11,"uniform_3fv","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["f32"]]]]],[11,"uniform_4fv","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["f32"]]]]],[11,"uniform_1iv","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["i32"]]]]],[11,"uniform_2iv","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["i32"]]]]],[11,"uniform_3iv","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["i32"]]]]],[11,"uniform_4iv","","The `WebGLRenderingContext.uniform[1234][fi][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["i32"]]]]],[11,"uniform_matrix_2fv","","The `WebGLRenderingContext.uniformMatrix[234]fv()` methods of the WebGL API specify matrix values for uniform variables.",69,[[["self"],["webgluniformlocation"],["bool"],["vec",["f32"]]]]],[11,"uniform_matrix_3fv","","The `WebGLRenderingContext.uniformMatrix[234]fv()` methods of the WebGL API specify matrix values for uniform variables.",69,[[["self"],["webgluniformlocation"],["bool"],["vec",["f32"]]]]],[11,"uniform_matrix_4fv","","The `WebGLRenderingContext.uniformMatrix[234]fv()` methods of the WebGL API specify matrix values for uniform variables.",69,[[["self"],["webgluniformlocation"],["bool"],["vec",["f32"]]]]],[11,"uniform_1ui","","The `WebGL2RenderingContext.uniform[1234][uif][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["u32"]]]],[11,"uniform_2ui","","The `WebGL2RenderingContext.uniform[1234][uif][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["u32"],["u32"]]]],[11,"uniform_3ui","","The `WebGL2RenderingContext.uniform[1234][uif][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["u32"],["u32"],["u32"]]]],[11,"uniform_4ui","","The `WebGL2RenderingContext.uniform[1234][uif][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["u32"],["u32"],["u32"],["u32"]]]],[11,"uniform_1uiv","","The `WebGL2RenderingContext.uniform[1234][uif][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["u32"]]]]],[11,"uniform_2uiv","","The `WebGL2RenderingContext.uniform[1234][uif][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["u32"]]]]],[11,"uniform_3uiv","","The `WebGL2RenderingContext.uniform[1234][uif][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["u32"]]]]],[11,"uniform_4uiv","","The `WebGL2RenderingContext.uniform[1234][uif][v]()` methods of the WebGL API specify values of uniform variables.",69,[[["self"],["webgluniformlocation"],["vec",["u32"]]]]],[11,"uniform_matrix_2x3fv","","The `WebGL2RenderingContext.uniformMatrix[234]x[234]fv()` methods of the WebGL 2 API specify matrix values for uniform variables.",69,[[["self"],["webgluniformlocation"],["bool"],["vec",["f32"]],["u32"],["u32"]]]],[11,"uniform_matrix_2x4fv","","The `WebGL2RenderingContext.uniformMatrix[234]x[234]fv()` methods of the WebGL 2 API specify matrix values for uniform variables.",69,[[["self"],["webgluniformlocation"],["bool"],["vec",["f32"]],["u32"],["u32"]]]],[11,"uniform_matrix_3x2fv","","The `WebGL2RenderingContext.uniformMatrix[234]x[234]fv()` methods of the WebGL 2 API specify matrix values for uniform variables.",69,[[["self"],["webgluniformlocation"],["bool"],["vec",["f32"]],["u32"],["u32"]]]],[11,"uniform_matrix_3x4fv","","The `WebGL2RenderingContext.uniformMatrix[234]x[234]fv()` methods of the WebGL 2 API specify matrix values for uniform variables.",69,[[["self"],["webgluniformlocation"],["bool"],["vec",["f32"]],["u32"],["u32"]]]],[11,"uniform_matrix_4x2fv","","The `WebGL2RenderingContext.uniformMatrix[234]x[234]fv()` methods of the WebGL 2 API specify matrix values for uniform variables.",69,[[["self"],["webgluniformlocation"],["bool"],["vec",["f32"]],["u32"],["u32"]]]],[11,"uniform_matrix_4x3fv","","The `WebGL2RenderingContext.uniformMatrix[234]x[234]fv()` methods of the WebGL 2 API specify matrix values for uniform variables.",69,[[["self"],["webgluniformlocation"],["bool"],["vec",["f32"]],["u32"],["u32"]]]],[0,"vertex_array_object","webgl_rs","VertextArrayObject and methods",N,N],[3,"WebGLRSVertexArrayObject","webgl_rs::vertex_array_object","VertexArrayObject",N,N],[11,"create_vertex_array","webgl_rs::rendering_context","Creates and initializes a WebGLRSVertexArrayObject object that represents a vertex array object (VAO) pointing to vertex array data and which provides names for different sets of vertex data.",69,[[["self"]],["webglrsvertexarrayobject"]]],[11,"delete","webgl_rs::vertex_array_object","Deletes the `WebGLRSVertexArrayObject` on the gpu and consumes itself.",78,[[["self"]]]],[11,"is_valid","","Return true if this is a valid `WebGLRSVertexArrayObject` object.",78,[[["self"]],["bool"]]],[11,"bind","","Binds this `WebGLRSVertexArrayObject` to the buffer.",78,[[["self"]]]],[11,"into","webgl_rs::buffer","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"into","webgl_rs::framebuffer","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"into","webgl_rs::glenum","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"return_abi","","",4,N],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"return_abi","","",5,N],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"return_abi","","",7,N],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"return_abi","","",8,N],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"return_abi","","",9,N],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"return_abi","","",10,N],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"return_abi","","",11,N],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"return_abi","","",12,N],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"return_abi","","",13,N],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"return_abi","","",14,N],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"return_abi","","",15,N],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"return_abi","","",16,N],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"return_abi","","",17,N],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"return_abi","","",18,N],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"return_abi","","",19,N],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"return_abi","","",20,N],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"return_abi","","",21,N],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"return_abi","","",22,N],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"return_abi","","",23,N],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"return_abi","","",24,N],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"return_abi","","",25,N],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"return_abi","","",26,N],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"return_abi","","",27,N],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"return_abi","","",28,N],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"return_abi","","",29,N],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"return_abi","","",30,N],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"return_abi","","",31,N],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"return_abi","","",32,N],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"return_abi","","",33,N],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"return_abi","","",34,N],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"return_abi","","",35,N],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"return_abi","","",36,N],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"return_abi","","",37,N],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"return_abi","","",38,N],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"return_abi","","",39,N],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"return_abi","","",40,N],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"return_abi","","",41,N],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"return_abi","","",42,N],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"return_abi","","",43,N],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"return_abi","","",44,N],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"return_abi","","",45,N],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"return_abi","","",46,N],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"return_abi","","",47,N],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"return_abi","","",48,N],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"return_abi","","",49,N],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"return_abi","","",50,N],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"return_abi","","",51,N],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"return_abi","","",52,N],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"return_abi","","",53,N],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"return_abi","","",54,N],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"return_abi","","",55,N],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"return_abi","","",56,N],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"return_abi","","",57,N],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"return_abi","","",58,N],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"return_abi","","",59,N],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"return_abi","","",60,N],[11,"into","","",61,[[["self"]],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,N],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"return_abi","","",61,N],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"return_abi","","",62,N],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"return_abi","","",63,N],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"return_abi","","",64,N],[11,"into","","",65,[[["self"]],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,N],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"return_abi","","",65,N],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"return_abi","","",66,N],[11,"into","webgl_rs::query","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"into","webgl_rs::renderbuffer","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"into","webgl_rs::rendering_context","",79,[[["self"]],["u"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"return_abi","","",79,N],[11,"into","","",80,[[["self"]],["u"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"return_abi","","",80,N],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"return_abi","","",69,N],[11,"into","","",70,[[["self"]],["u"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"return_abi","","",70,N],[11,"into","webgl_rs::sampler","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"into","webgl_rs::shader_program","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"return_abi","","",74,N],[11,"into","webgl_rs::sync","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,N],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"return_abi","","",81,N],[11,"into","webgl_rs::texture","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"into","webgl_rs::transform_feedback","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,N],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"return_abi","","",82,N],[11,"into","webgl_rs::uniform_location","",83,[[["self"]],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,N],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"return_abi","","",84,N],[11,"into","webgl_rs::vertex_array_object","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"eq","webgl_rs::glenum","",39,[[["self"],["texturewrap"]],["bool"]]],[11,"from","webgl_rs::rendering_context","",79,[[["jsvalue"]],["htmldocument"]]],[11,"from","","",80,[[["jsvalue"]],["htmlcanvaselement"]]],[11,"from","","",69,[[["jsvalue"]],["webgl2renderingcontext"]]],[11,"from","","",70,[[["jsvalue"]],["webglshaderprecisionformat"]]],[11,"from","webgl_rs::shader_program","",74,[[["jsvalue"]],["webglactiveinfo"]]],[11,"from","webgl_rs::sync","",81,[[["jsvalue"]],["webglsync"]]],[11,"from","webgl_rs::transform_feedback","",82,[[["jsvalue"]],["webgltransformfeedback"]]],[11,"from","webgl_rs::uniform_location","",84,[[["jsvalue"]],["webgluniformlocation"]]],[11,"as_ref","webgl_rs::rendering_context","",79,[[["self"]],["jsvalue"]]],[11,"as_ref","","",80,[[["self"]],["jsvalue"]]],[11,"as_ref","","",69,[[["self"]],["jsvalue"]]],[11,"as_ref","","",70,[[["self"]],["jsvalue"]]],[11,"as_ref","webgl_rs::shader_program","",74,[[["self"]],["jsvalue"]]],[11,"as_ref","webgl_rs::sync","",81,[[["self"]],["jsvalue"]]],[11,"as_ref","webgl_rs::transform_feedback","",82,[[["self"]],["jsvalue"]]],[11,"as_ref","webgl_rs::uniform_location","",84,[[["self"]],["jsvalue"]]],[11,"clone","webgl_rs::buffer","",0,[[["self"]],["webglrsbuffer"]]],[11,"clone","webgl_rs::framebuffer","",3,[[["self"]],["webglrsframebuffer"]]],[11,"clone","webgl_rs::glenum","",4,[[["self"]],["attributesize"]]],[11,"clone","","",5,[[["self"]],["shaderkind"]]],[11,"clone","","",7,[[["self"]],["programparameter"]]],[11,"clone","","",8,[[["self"]],["shaderparameter"]]],[11,"clone","","",9,[[["self"]],["bufferkind"]]],[11,"clone","","",10,[[["self"]],["datahint"]]],[11,"clone","","",11,[[["self"]],["bufferparameter"]]],[11,"clone","","",12,[[["self"]],["datatype"]]],[11,"clone","","",13,[[["self"]],["flag"]]],[11,"clone","","",14,[[["self"]],["bufferbit"]]],[11,"clone","","",15,[[["self"]],["primitives"]]],[11,"clone","","",16,[[["self"]],["blendmode"]]],[11,"clone","","",17,[[["self"]],["blendequation"]]],[11,"clone","","",18,[[["self"]],["parameter"]]],[11,"clone","","",19,[[["self"]],["vertexattrib"]]],[11,"clone","","",20,[[["self"]],["culling"]]],[11,"clone","","",21,[[["self"]],["error"]]],[11,"clone","","",22,[[["self"]],["frontfacedirection"]]],[11,"clone","","",23,[[["self"]],["depthtest"]]],[11,"clone","","",24,[[["self"]],["stenciltest"]]],[11,"clone","","",25,[[["self"]],["stencilaction"]]],[11,"clone","","",26,[[["self"]],["pixeltype"]]],[11,"clone","","",27,[[["self"]],["pixelformat"]]],[11,"clone","","",28,[[["self"]],["pixelreadformat"]]],[11,"clone","","",29,[[["self"]],["pixelcopyformat"]]],[11,"clone","","",30,[[["self"]],["hintmode"]]],[11,"clone","","",31,[[["self"]],["hinttarget"]]],[11,"clone","","",32,[[["self"]],["texturekind"]]],[11,"clone","","",33,[[["self"]],["texture2dkind"]]],[11,"clone","","",34,[[["self"]],["texture3dkind"]]],[11,"clone","","",35,[[["self"]],["textureparameter"]]],[11,"clone","","",36,[[["self"]],["texturebindpoint"]]],[11,"clone","","",37,[[["self"]],["texturemagfilter"]]],[11,"clone","","",38,[[["self"]],["textureminfilter"]]],[11,"clone","","",39,[[["self"]],["texturewrap"]]],[11,"clone","","",40,[[["self"]],["buffers"]]],[11,"clone","","",41,[[["self"]],["pixelstoragemode"]]],[11,"clone","","",42,[[["self"]],["shaderprecision"]]],[11,"clone","","",43,[[["self"]],["uniformtype"]]],[11,"clone","","",44,[[["self"]],["texturecompression"]]],[11,"clone","","",45,[[["self"]],["textureunit"]]],[11,"clone","","",46,[[["self"]],["framebufferkind"]]],[11,"clone","","",47,[[["self"]],["framebufferstatus"]]],[11,"clone","","",48,[[["self"]],["renderbufferkind"]]],[11,"clone","","",49,[[["self"]],["attachment"]]],[11,"clone","","",50,[[["self"]],["renderbufferparameter"]]],[11,"clone","","",51,[[["self"]],["renderbufferformat"]]],[11,"clone","","",52,[[["self"]],["attributetype"]]],[11,"clone","","",53,[[["self"]],["colorbuffer"]]],[11,"clone","","",54,[[["self"]],["informationtype"]]],[11,"clone","","",55,[[["self"]],["querytarget"]]],[11,"clone","","",56,[[["self"]],["query"]]],[11,"clone","","",57,[[["self"]],["queryparameter"]]],[11,"clone","","",58,[[["self"]],["gpustate"]]],[11,"clone","","",59,[[["self"]],["waitstatus"]]],[11,"clone","","",60,[[["self"]],["syncstatus"]]],[11,"clone","","",61,[[["self"]],["syncparameter"]]],[11,"clone","","",62,[[["self"]],["transformfeedback"]]],[11,"clone","","",63,[[["self"]],["transformfeedbackmode"]]],[11,"clone","","",64,[[["self"]],["transformfeedbackbuffermode"]]],[11,"clone","","",65,[[["self"]],["bufferbase"]]],[11,"clone","","",66,[[["self"]],["comparemode"]]],[11,"clone","webgl_rs::query","",67,[[["self"]],["webglrsquery"]]],[11,"clone","webgl_rs::renderbuffer","",68,[[["self"]],["webglrsrenderbuffer"]]],[11,"clone","webgl_rs::rendering_context","",69,[[["self"]],["webgl2renderingcontext"]]],[11,"clone","webgl_rs::sampler","",71,[[["self"]],["webglrssampler"]]],[11,"clone","webgl_rs::shader_program","",72,[[["self"]],["webglrsprogram"]]],[11,"clone","","",73,[[["self"]],["webglrsshader"]]],[11,"clone","webgl_rs::sync","",75,[[["self"]],["webglrssync"]]],[11,"clone","","",81,[[["self"]],["webglsync"]]],[11,"clone","webgl_rs::texture","",76,[[["self"]],["webglrstexture"]]],[11,"clone","webgl_rs::transform_feedback","",77,[[["self"]],["webglrstransformfeedback"]]],[11,"clone","","",82,[[["self"]],["webgltransformfeedback"]]],[11,"clone","webgl_rs::uniform_location","",83,[[["self"]],["webglrsuniformlocation"]]],[11,"clone","","",84,[[["self"]],["webgluniformlocation"]]],[11,"clone","webgl_rs::vertex_array_object","",78,[[["self"]],["webglrsvertexarrayobject"]]],[11,"fmt","webgl_rs::glenum","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"into_abi","","",4,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",5,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",7,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",8,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",9,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",10,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",11,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",12,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",13,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",14,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",15,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",16,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",17,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",18,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",19,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",20,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",21,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",22,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",23,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",24,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",25,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",26,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",27,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",28,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",29,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",30,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",31,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",32,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",33,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",34,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",35,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",36,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",37,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",38,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",39,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",40,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",41,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",42,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",43,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",44,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",45,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",46,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",47,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",48,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",49,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",50,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",51,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",52,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",53,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",54,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",55,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",56,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",57,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",58,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",59,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",60,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",61,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",62,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",63,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",64,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",65,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",66,[[["self"],["stack"]],["u32"]]],[11,"into_abi","webgl_rs::rendering_context","",79,N],[11,"into_abi","","",80,N],[11,"into_abi","","",69,N],[11,"into_abi","","",70,N],[11,"into_abi","webgl_rs::shader_program","",74,N],[11,"into_abi","webgl_rs::sync","",81,N],[11,"into_abi","webgl_rs::transform_feedback","",82,N],[11,"into_abi","webgl_rs::uniform_location","",84,N],[11,"from_abi","webgl_rs::glenum","",4,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",5,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",7,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",8,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",9,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",10,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",11,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",12,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",13,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",14,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",15,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",16,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",17,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",18,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",19,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",20,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",21,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",22,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",23,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",24,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",25,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",26,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",27,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",28,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",29,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",30,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",31,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",32,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",33,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",34,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",35,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",36,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",37,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",38,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",39,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",40,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",41,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",42,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",43,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",44,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",45,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",46,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",47,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",48,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",49,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",50,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",51,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",52,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",53,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",54,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",55,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",56,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",57,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",58,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",59,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",60,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",61,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",62,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",63,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",64,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",65,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",66,[[["u32"],["stack"]],["self"]]],[11,"from_abi","webgl_rs::rendering_context","",79,N],[11,"from_abi","","",80,N],[11,"from_abi","","",69,N],[11,"from_abi","","",70,N],[11,"from_abi","webgl_rs::shader_program","",74,N],[11,"from_abi","webgl_rs::sync","",81,N],[11,"from_abi","webgl_rs::transform_feedback","",82,N],[11,"from_abi","webgl_rs::uniform_location","",84,N],[11,"is_none","webgl_rs::rendering_context","",79,N],[11,"is_none","","",80,N],[11,"is_none","","",69,N],[11,"is_none","","",70,N],[11,"is_none","webgl_rs::shader_program","",74,N],[11,"is_none","webgl_rs::sync","",81,N],[11,"is_none","webgl_rs::transform_feedback","",82,N],[11,"is_none","webgl_rs::uniform_location","",84,N],[11,"ref_from_abi","webgl_rs::rendering_context","",79,N],[11,"ref_from_abi","","",80,N],[11,"ref_from_abi","","",69,N],[11,"ref_from_abi","","",70,N],[11,"ref_from_abi","webgl_rs::shader_program","",74,N],[11,"ref_from_abi","webgl_rs::sync","",81,N],[11,"ref_from_abi","webgl_rs::transform_feedback","",82,N],[11,"ref_from_abi","webgl_rs::uniform_location","",84,N],[11,"none","webgl_rs::rendering_context","",79,N],[11,"none","","",80,N],[11,"none","","",69,N],[11,"none","","",70,N],[11,"none","webgl_rs::shader_program","",74,N],[11,"none","webgl_rs::sync","",81,N],[11,"none","webgl_rs::transform_feedback","",82,N],[11,"none","webgl_rs::uniform_location","",84,N],[11,"describe","webgl_rs::glenum","",4,[[]]],[11,"describe","","",5,[[]]],[11,"describe","","",7,[[]]],[11,"describe","","",8,[[]]],[11,"describe","","",9,[[]]],[11,"describe","","",10,[[]]],[11,"describe","","",11,[[]]],[11,"describe","","",12,[[]]],[11,"describe","","",13,[[]]],[11,"describe","","",14,[[]]],[11,"describe","","",15,[[]]],[11,"describe","","",16,[[]]],[11,"describe","","",17,[[]]],[11,"describe","","",18,[[]]],[11,"describe","","",19,[[]]],[11,"describe","","",20,[[]]],[11,"describe","","",21,[[]]],[11,"describe","","",22,[[]]],[11,"describe","","",23,[[]]],[11,"describe","","",24,[[]]],[11,"describe","","",25,[[]]],[11,"describe","","",26,[[]]],[11,"describe","","",27,[[]]],[11,"describe","","",28,[[]]],[11,"describe","","",29,[[]]],[11,"describe","","",30,[[]]],[11,"describe","","",31,[[]]],[11,"describe","","",32,[[]]],[11,"describe","","",33,[[]]],[11,"describe","","",34,[[]]],[11,"describe","","",35,[[]]],[11,"describe","","",36,[[]]],[11,"describe","","",37,[[]]],[11,"describe","","",38,[[]]],[11,"describe","","",39,[[]]],[11,"describe","","",40,[[]]],[11,"describe","","",41,[[]]],[11,"describe","","",42,[[]]],[11,"describe","","",43,[[]]],[11,"describe","","",44,[[]]],[11,"describe","","",45,[[]]],[11,"describe","","",46,[[]]],[11,"describe","","",47,[[]]],[11,"describe","","",48,[[]]],[11,"describe","","",49,[[]]],[11,"describe","","",50,[[]]],[11,"describe","","",51,[[]]],[11,"describe","","",52,[[]]],[11,"describe","","",53,[[]]],[11,"describe","","",54,[[]]],[11,"describe","","",55,[[]]],[11,"describe","","",56,[[]]],[11,"describe","","",57,[[]]],[11,"describe","","",58,[[]]],[11,"describe","","",59,[[]]],[11,"describe","","",60,[[]]],[11,"describe","","",61,[[]]],[11,"describe","","",62,[[]]],[11,"describe","","",63,[[]]],[11,"describe","","",64,[[]]],[11,"describe","","",65,[[]]],[11,"describe","","",66,[[]]],[11,"describe","webgl_rs::rendering_context","",79,[[]]],[11,"describe","","",80,[[]]],[11,"describe","","",69,[[]]],[11,"describe","","",70,[[]]],[11,"describe","webgl_rs::shader_program","",74,[[]]],[11,"describe","webgl_rs::sync","",81,[[]]],[11,"describe","webgl_rs::transform_feedback","",82,[[]]],[11,"describe","webgl_rs::uniform_location","",84,[[]]],[11,"instanceof","webgl_rs::rendering_context","",79,[[["jsvalue"]],["bool"]]],[11,"unchecked_from_js","","",79,[[["jsvalue"]],["self"]]],[11,"unchecked_from_js_ref","","",79,[[["jsvalue"]],["self"]]],[11,"instanceof","","",80,[[["jsvalue"]],["bool"]]],[11,"unchecked_from_js","","",80,[[["jsvalue"]],["self"]]],[11,"unchecked_from_js_ref","","",80,[[["jsvalue"]],["self"]]],[11,"instanceof","","",69,[[["jsvalue"]],["bool"]]],[11,"unchecked_from_js","","",69,[[["jsvalue"]],["self"]]],[11,"unchecked_from_js_ref","","",69,[[["jsvalue"]],["self"]]],[11,"instanceof","","",70,[[["jsvalue"]],["bool"]]],[11,"unchecked_from_js","","",70,[[["jsvalue"]],["self"]]],[11,"unchecked_from_js_ref","","",70,[[["jsvalue"]],["self"]]],[11,"instanceof","webgl_rs::shader_program","",74,[[["jsvalue"]],["bool"]]],[11,"unchecked_from_js","","",74,[[["jsvalue"]],["self"]]],[11,"unchecked_from_js_ref","","",74,[[["jsvalue"]],["self"]]],[11,"instanceof","webgl_rs::sync","",81,[[["jsvalue"]],["bool"]]],[11,"unchecked_from_js","","",81,[[["jsvalue"]],["self"]]],[11,"unchecked_from_js_ref","","",81,[[["jsvalue"]],["self"]]],[11,"instanceof","webgl_rs::transform_feedback","",82,[[["jsvalue"]],["bool"]]],[11,"unchecked_from_js","","",82,[[["jsvalue"]],["self"]]],[11,"unchecked_from_js_ref","","",82,[[["jsvalue"]],["self"]]],[11,"instanceof","webgl_rs::uniform_location","",84,[[["jsvalue"]],["bool"]]],[11,"unchecked_from_js","","",84,[[["jsvalue"]],["self"]]],[11,"unchecked_from_js_ref","","",84,[[["jsvalue"]],["self"]]],[11,"create_buffer","webgl_rs::rendering_context","Creates a new `WebGLRSBuffer` object which is used for storing data such as vertices or colors.",69,[[["self"]],["webglrsbuffer"]]],[11,"create_framebuffer","","Creates and initializes a new `WebGLRSFramebuffer` object",69,[[["self"]],["webglrsframebuffer"]]],[11,"create_query","","Creates and initializes a `WebGLRSQuery` object, that provide ways to asynchronously query for information.",69,[[["self"]],["webglrsquery"]]],[11,"query","","Returns the currently active WebGLQuery for the target, or null.",69,[[["self"],["querytarget"]],["webglrsquery"]]],[11,"create_renderbuffer","","Creates and initializes WebGLRSRenderbuffer object.",69,[[["self"]],["webglrsrenderbuffer"]]]],"paths":[[3,"WebGLRSBuffer"],[8,"Buffer"],[8,"Image"],[3,"WebGLRSFramebuffer"],[4,"AttributeSize"],[4,"ShaderKind"],[4,"NotProgramParameter"],[4,"ProgramParameter"],[4,"ShaderParameter"],[4,"BufferKind"],[4,"DataHint"],[4,"BufferParameter"],[4,"DataType"],[4,"Flag"],[4,"BufferBit"],[4,"Primitives"],[4,"BlendMode"],[4,"BlendEquation"],[4,"Parameter"],[4,"VertexAttrib"],[4,"Culling"],[4,"Error"],[4,"FrontFaceDirection"],[4,"DepthTest"],[4,"StencilTest"],[4,"StencilAction"],[4,"PixelType"],[4,"PixelFormat"],[4,"PixelReadFormat"],[4,"PixelCopyFormat"],[4,"HintMode"],[4,"HintTarget"],[4,"TextureKind"],[4,"Texture2DKind"],[4,"Texture3DKind"],[4,"TextureParameter"],[4,"TextureBindPoint"],[4,"TextureMagFilter"],[4,"TextureMinFilter"],[4,"TextureWrap"],[4,"Buffers"],[4,"PixelStorageMode"],[4,"ShaderPrecision"],[4,"UniformType"],[4,"TextureCompression"],[4,"TextureUnit"],[4,"FramebufferKind"],[4,"FramebufferStatus"],[4,"RenderbufferKind"],[4,"Attachment"],[4,"RenderbufferParameter"],[4,"RenderbufferFormat"],[4,"AttributeType"],[4,"ColorBuffer"],[4,"InformationType"],[4,"QueryTarget"],[4,"Query"],[4,"QueryParameter"],[4,"GPUState"],[4,"WaitStatus"],[4,"SyncStatus"],[4,"SyncParameter"],[4,"TransformFeedback"],[4,"TransformFeedbackMode"],[4,"TransformFeedbackBufferMode"],[4,"BufferBase"],[4,"CompareMode"],[3,"WebGLRSQuery"],[3,"WebGLRSRenderbuffer"],[3,"WebGL2RenderingContext"],[3,"WebGLShaderPrecisionFormat"],[3,"WebGLRSSampler"],[3,"WebGLRSProgram"],[3,"WebGLRSShader"],[3,"WebGLActiveInfo"],[3,"WebGLRSSync"],[3,"WebGLRSTexture"],[3,"WebGLRSTransformFeedback"],[3,"WebGLRSVertexArrayObject"],[3,"HTMLDocument"],[3,"HTMLCanvasElement"],[3,"WebGLSync"],[3,"WebGLTransformFeedback"],[3,"WebGLRSUniformLocation"],[3,"WebGLUniformLocation"]]};
initSearch(searchIndex);
